basePath: /
definitions:
  Error:
    properties:
      details:
        additionalProperties: true
        type: object
      error:
        example: Validation failed
        type: string
      message:
        example: Invalid email format
        type: string
    type: object
  github_com_caloi_ventros-crm_infrastructure_health.CheckResult:
    properties:
      duration_ms:
        example: 15
        type: integer
      message:
        example: database is operational
        type: string
      metadata:
        additionalProperties: true
        type: object
      status:
        allOf:
        - $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.Status'
        example: healthy
      timestamp:
        example: "2024-01-01T00:00:00Z"
        type: string
    type: object
  github_com_caloi_ventros-crm_infrastructure_health.Status:
    enum:
    - healthy
    - degraded
    - unhealthy
    type: string
    x-enum-varnames:
    - StatusHealthy
    - StatusDegraded
    - StatusUnhealthy
  github_com_caloi_ventros-crm_infrastructure_http_dto.ActionParameterDTO:
    properties:
      default: {}
      description:
        type: string
      name:
        type: string
      required:
        type: boolean
      type:
        type: string
    type: object
  github_com_caloi_ventros-crm_infrastructure_http_dto.ActionResponse:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      example:
        additionalProperties: true
        type: object
      name:
        type: string
      parameters:
        items:
          $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.ActionParameterDTO'
        type: array
    type: object
  github_com_caloi_ventros-crm_infrastructure_http_dto.AutomationDiscoveryResponse:
    properties:
      actions:
        items:
          $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.ActionResponse'
        type: array
      logic_types:
        items:
          $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.LogicOperatorResponse'
        type: array
      operators:
        items:
          $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.ConditionOperatorResponse'
        type: array
      triggers:
        items:
          $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.TriggerResponse'
        type: array
      types:
        items:
          $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.AutomationTypeResponse'
        type: array
    type: object
  github_com_caloi_ventros-crm_infrastructure_http_dto.AutomationTypeResponse:
    properties:
      code:
        type: string
      description:
        type: string
      examples:
        items:
          type: string
        type: array
      icon:
        type: string
      name:
        type: string
    type: object
  github_com_caloi_ventros-crm_infrastructure_http_dto.ConditionOperatorResponse:
    properties:
      code:
        type: string
      description:
        type: string
      example:
        type: string
      name:
        type: string
    type: object
  github_com_caloi_ventros-crm_infrastructure_http_dto.LogicOperatorResponse:
    properties:
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  github_com_caloi_ventros-crm_infrastructure_http_dto.TriggerParameter:
    properties:
      description:
        type: string
      example:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  github_com_caloi_ventros-crm_infrastructure_http_dto.TriggerResponse:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      is_system:
        type: boolean
      name:
        type: string
      parameters:
        items:
          $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.TriggerParameter'
        type: array
    type: object
  github_com_caloi_ventros-crm_internal_application_tracking.DecodeTrackingRequest:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  github_com_caloi_ventros-crm_internal_application_tracking.DecodeTrackingResponse:
    properties:
      analysis:
        additionalProperties: true
        type: object
      clean_message:
        type: string
      confidence:
        type: string
      decoded_decimal:
        type: integer
      decoded_ternary:
        type: string
      error:
        type: string
      original_message:
        type: string
      success:
        type: boolean
    type: object
  github_com_caloi_ventros-crm_internal_application_tracking.EncodeTrackingRequest:
    properties:
      message:
        type: string
      phone:
        type: string
      tracking_id:
        type: integer
    required:
    - message
    - tracking_id
    type: object
  github_com_caloi_ventros-crm_internal_application_tracking.EncodeTrackingResponse:
    properties:
      debug:
        additionalProperties: true
        type: object
      decimal_value:
        type: integer
      invisible_code:
        type: string
      message_with_code:
        type: string
      original_message:
        type: string
      phone:
        type: string
      success:
        type: boolean
      ternary_encoded:
        type: string
      tracking_id:
        type: integer
      whatsapp_link:
        type: string
    type: object
  github_com_caloi_ventros-crm_internal_application_tracking.TrackingDTO:
    properties:
      ad_id:
        type: string
      ad_url:
        type: string
      campaign:
        type: string
      click_id:
        type: string
      contact_id:
        type: string
      conversion_data:
        type: string
      created_at:
        type: string
      id:
        type: string
      metadata:
        additionalProperties: true
        type: object
      platform:
        type: string
      project_id:
        type: string
      session_id:
        type: string
      source:
        type: string
      tenant_id:
        type: string
      updated_at:
        type: string
      utm_campaign:
        type: string
      utm_content:
        type: string
      utm_medium:
        type: string
      utm_source:
        type: string
      utm_term:
        type: string
    type: object
  github_com_caloi_ventros-crm_internal_domain_pipeline.StatusType:
    enum:
    - open
    - active
    - closed
    type: string
    x-enum-comments:
      StatusTypeActive: Status ativo/em progresso
      StatusTypeClosed: Status fechado/finalizado
      StatusTypeOpen: Status inicial/aberto
    x-enum-descriptions:
    - Status inicial/aberto
    - Status ativo/em progresso
    - Status fechado/finalizado
    x-enum-varnames:
    - StatusTypeOpen
    - StatusTypeActive
    - StatusTypeClosed
  infrastructure_http_handlers.ChangeContactStatusRequest:
    properties:
      notes:
        example: Cliente interessado no produto X
        type: string
      reason:
        example: Contato respondeu
        type: string
      status_id:
        type: string
    required:
    - status_id
    type: object
  infrastructure_http_handlers.ChangePipelineStatusRequest:
    properties:
      reason:
        type: string
      status_id:
        type: string
    required:
    - status_id
    type: object
  infrastructure_http_handlers.CloseSessionRequest:
    properties:
      notes:
        type: string
      reason:
        description: '"resolved", "transferred", "escalated", "agent_closed"'
        type: string
    required:
    - reason
    type: object
  infrastructure_http_handlers.ConfigureWebhookRequest:
    properties:
      base_url:
        example: https://api.ventros.com
        type: string
    type: object
  infrastructure_http_handlers.CreateAgentRequest:
    properties:
      department:
        example: vendas
        type: string
      email:
        example: joao@empresa.com
        type: string
      languages:
        example:
        - pt
        - en
        items:
          type: string
        type: array
      max_sessions:
        example: 5
        type: integer
      name:
        example: João Silva
        type: string
      phone:
        example: "+5511999999999"
        type: string
      role:
        example: agent
        type: string
      skills:
        example:
        - vendas
        - suporte
        items:
          type: string
        type: array
      tenant_id:
        example: tenant_123
        type: string
    required:
    - email
    - name
    - tenant_id
    type: object
  infrastructure_http_handlers.CreateChannelRequest:
    properties:
      name:
        example: WhatsApp Principal
        type: string
      type:
        example: waha
        type: string
      waha_config:
        $ref: '#/definitions/infrastructure_http_handlers.CreateWAHAConfigRequest'
    required:
    - name
    - type
    type: object
  infrastructure_http_handlers.CreateContactRequest:
    properties:
      custom_fields:
        additionalProperties:
          type: string
        example:
          company: Empresa XYZ
        type: object
      email:
        example: joao@example.com
        type: string
      external_id:
        example: ext_123
        type: string
      language:
        example: pt-BR
        type: string
      name:
        example: João Silva
        type: string
      phone:
        example: "+5511999999999"
        type: string
      source_channel:
        example: whatsapp
        type: string
      tags:
        example:
        - lead
        - whatsapp
        items:
          type: string
        type: array
      timezone:
        example: America/Sao_Paulo
        type: string
    required:
    - name
    type: object
  infrastructure_http_handlers.CreateMessageRequest:
    properties:
      channel_type_id:
        type: string
      contact_id:
        type: string
      content:
        example: Olá, como posso ajudar?
        type: string
      direction:
        example: inbound
        type: string
      external_id:
        example: msg_123
        type: string
      media_type:
        type: string
      media_url:
        type: string
      message_type:
        example: text
        type: string
      metadata:
        additionalProperties: true
        type: object
      reply_to_id:
        type: string
      session_id:
        type: string
    required:
    - channel_type_id
    - contact_id
    - content
    - session_id
    type: object
  infrastructure_http_handlers.CreatePipelineRequest:
    properties:
      color:
        example: '#3B82F6'
        type: string
      description:
        example: Pipeline de vendas principal
        type: string
      name:
        example: Vendas
        type: string
      position:
        example: 0
        type: integer
    required:
    - name
    type: object
  infrastructure_http_handlers.CreateProjectRequest:
    properties:
      description:
        example: Projeto principal de vendas
        type: string
      name:
        example: Projeto Vendas
        type: string
      tenant_id:
        example: tenant_123
        type: string
    required:
    - name
    - tenant_id
    type: object
  infrastructure_http_handlers.CreateStatusRequest:
    properties:
      color:
        example: '#10B981'
        type: string
      description:
        example: Lead recém chegado
        type: string
      name:
        example: Novo Lead
        type: string
      position:
        example: 0
        type: integer
      status_type:
        allOf:
        - $ref: '#/definitions/github_com_caloi_ventros-crm_internal_domain_pipeline.StatusType'
        example: open
    required:
    - name
    - status_type
    type: object
  infrastructure_http_handlers.CreateTrackingRequest:
    properties:
      ad_id:
        type: string
      ad_url:
        type: string
      campaign:
        type: string
      click_id:
        type: string
      contact_id:
        type: string
      conversion_data:
        type: string
      metadata:
        additionalProperties: true
        type: object
      platform:
        description: instagram, facebook, etc
        type: string
      project_id:
        type: string
      session_id:
        type: string
      source:
        description: meta_ads, google_ads, etc
        type: string
      utm_campaign:
        type: string
      utm_content:
        type: string
      utm_medium:
        type: string
      utm_source:
        type: string
      utm_term:
        type: string
    required:
    - contact_id
    - platform
    - project_id
    - source
    type: object
  infrastructure_http_handlers.CreateUserRequest:
    properties:
      email:
        example: joao@empresa.com
        type: string
      name:
        example: João Silva
        type: string
      password:
        example: senha123
        type: string
      role:
        example: user
        type: string
    required:
    - email
    - name
    - password
    type: object
  infrastructure_http_handlers.CreateWAHAConfigRequest:
    properties:
      api_key:
        description: Chave da API para autenticação
        example: your-waha-api-key
        type: string
      base_url:
        example: http://localhost:3000
        type: string
      session_id:
        description: ID da sessão (equivale ao ExternalID)
        example: default
        type: string
      token:
        description: Token de acesso (alternativo)
        example: your-waha-token
        type: string
      webhook_url:
        example: http://localhost:8080/api/v1/webhooks/waha
        type: string
    required:
    - base_url
    type: object
  infrastructure_http_handlers.CreateWebhookRequest:
    properties:
      events:
        example:
        - message
        - ack
        - call.received
        items:
          type: string
        type: array
      headers:
        additionalProperties:
          type: string
        example:
          Authorization: Bearer token123
        type: object
      name:
        example: N8N Webhook
        type: string
      retry_count:
        example: 3
        type: integer
      secret:
        example: my-secret-key
        type: string
      timeout_seconds:
        example: 30
        type: integer
      url:
        example: https://n8n.example.com/webhook/waha-events
        type: string
    required:
    - events
    - name
    - url
    type: object
  infrastructure_http_handlers.EnumValue:
    properties:
      description:
        example: Facebook, Instagram, Messenger, Audience Network
        type: string
      label:
        example: Meta (Facebook/Instagram)
        type: string
      value:
        example: meta
        type: string
    type: object
  infrastructure_http_handlers.GenerateAPIKeyRequest:
    properties:
      name:
        example: Minha API Key
        type: string
    type: object
  infrastructure_http_handlers.HealthResponse:
    properties:
      dependencies:
        additionalProperties:
          $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
        type: object
      service:
        example: ventros-crm
        type: string
      status:
        example: healthy
        type: string
      timestamp:
        example: "2024-01-01T00:00:00Z"
        type: string
      version:
        example: 0.1.0
        type: string
    type: object
  infrastructure_http_handlers.ImportWAHAHistoryRequest:
    properties:
      limit:
        description: Número de mensagens por chat (0 = todas)
        example: 100
        type: integer
      strategy:
        description: '"all", "recent", "custom"'
        example: recent
        type: string
    type: object
  infrastructure_http_handlers.LoginRequest:
    properties:
      email:
        example: joao@empresa.com
        type: string
      password:
        example: senha123
        type: string
    required:
    - email
    - password
    type: object
  infrastructure_http_handlers.PlatformCompatibilityInfo:
    properties:
      description:
        type: string
      valid_mediums:
        items:
          type: string
        type: array
    type: object
  infrastructure_http_handlers.TestQRCodeRequest:
    properties:
      channel_name:
        example: WhatsApp Teste
        type: string
      session_id:
        example: default
        type: string
    required:
    - channel_name
    - session_id
    type: object
  infrastructure_http_handlers.TestWAHARequest:
    properties:
      base_url:
        example: http://localhost:3000
        type: string
      token:
        example: your-waha-token
        type: string
    required:
    - base_url
    type: object
  infrastructure_http_handlers.TrackingEnumsResponse:
    properties:
      creative_formats:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      google_sources:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      marketing_tactics:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      mediums:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      meta_sources:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      mkt_direto_sources:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      offline_sources:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      platform_compatibility:
        additionalProperties:
          $ref: '#/definitions/infrastructure_http_handlers.PlatformCompatibilityInfo'
        type: object
      platforms:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
    type: object
  infrastructure_http_handlers.UpdateAgentRequest:
    properties:
      active:
        type: boolean
      department:
        type: string
      email:
        type: string
      languages:
        items:
          type: string
        type: array
      max_sessions:
        type: integer
      name:
        type: string
      phone:
        type: string
      role:
        type: string
      skills:
        items:
          type: string
        type: array
    type: object
  infrastructure_http_handlers.UpdateContactRequest:
    properties:
      custom_fields:
        additionalProperties:
          type: string
        type: object
      email:
        type: string
      external_id:
        type: string
      language:
        type: string
      name:
        type: string
      phone:
        type: string
      source_channel:
        type: string
      tags:
        items:
          type: string
        type: array
      timezone:
        type: string
    type: object
  infrastructure_http_handlers.UpdateMessageRequest:
    properties:
      content:
        type: string
      delivered_at:
        type: string
      metadata:
        additionalProperties: true
        type: object
      read_at:
        type: string
      status:
        type: string
    type: object
  infrastructure_http_handlers.UpdateProjectRequest:
    properties:
      active:
        type: boolean
      description:
        type: string
      name:
        type: string
    type: object
  infrastructure_http_handlers.UpdateWebhookRequest:
    properties:
      active:
        type: boolean
      events:
        items:
          type: string
        type: array
      headers:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      retry_count:
        type: integer
      secret:
        type: string
      timeout_seconds:
        type: integer
      url:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@ventros.com
    name: API Support
  description: API para gerenciamento de CRM com eventos e workflows
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Ventros CRM API
  version: "1.0"
paths:
  /api/v1/agents:
    get:
      description: Lista todos os agentes com filtros opcionais
      parameters:
      - description: Filter by tenant ID
        in: query
        name: tenant_id
        type: string
      - description: Filter by active status
        in: query
        name: active
        type: boolean
      - description: Filter by role
        in: query
        name: role
        type: string
      - description: Filter by department
        in: query
        name: department
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of agents
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List agents
      tags:
      - agents
    post:
      consumes:
      - application/json
      description: Cria um novo agente
      parameters:
      - description: Agent data
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateAgentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Agent created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create agent
      tags:
      - agents
  /api/v1/agents/{id}:
    delete:
      description: Remove um agente (soft delete)
      parameters:
      - description: Agent ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Agent deleted successfully
        "400":
          description: Invalid agent ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Agent not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete agent
      tags:
      - agents
    get:
      description: Obtém detalhes de um agente específico
      parameters:
      - description: Agent ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid agent ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Agent not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get agent by ID
      tags:
      - agents
    put:
      consumes:
      - application/json
      description: Atualiza um agente existente
      parameters:
      - description: Agent ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Agent update data
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateAgentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Agent updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Agent not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update agent
      tags:
      - agents
  /api/v1/agents/{id}/stats:
    get:
      description: Obtém estatísticas de um agente
      parameters:
      - description: Agent ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent statistics
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid agent ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Agent not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get agent statistics
      tags:
      - agents
  /api/v1/auth/api-key:
    post:
      consumes:
      - application/json
      description: Gera uma nova API key para o usuário
      parameters:
      - description: API key request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.GenerateAPIKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: API key generated
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Generate API key
      tags:
      - auth
  /api/v1/auth/info:
    get:
      description: Informações sobre autenticação para desenvolvimento
      produces:
      - application/json
      responses:
        "200":
          description: Auth information
          schema:
            additionalProperties: true
            type: object
      summary: Get auth info
      tags:
      - auth
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário e retorna API key
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication failed
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - auth
  /api/v1/auth/profile:
    get:
      description: Obtém o perfil do usuário autenticado
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user profile
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Cria um novo usuário no sistema com projeto e pipeline default
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create user
      tags:
      - auth
  /api/v1/automation/actions:
    get:
      description: Retorna todas as ações que podem ser executadas nas automações
      parameters:
      - description: Filtrar por categoria (messaging, pipeline, assignment, tasks,
          integration, organization, data, workflow)
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.ActionResponse'
            type: array
      summary: Lista ações disponíveis
      tags:
      - Automation
  /api/v1/automation/conditions/operators:
    get:
      description: Retorna todos os operadores disponíveis para condições (eq, gt,
        lt, contains, etc)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.ConditionOperatorResponse'
            type: array
      summary: Lista operadores de condição
      tags:
      - Automation
  /api/v1/automation/discovery:
    get:
      description: Retorna tipos, triggers, ações, operadores e lógica em uma única
        resposta
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.AutomationDiscoveryResponse'
      summary: Discovery completo de automação
      tags:
      - Automation
  /api/v1/automation/logic-operators:
    get:
      description: Retorna operadores lógicos disponíveis para combinar condições
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.LogicOperatorResponse'
            type: array
      summary: Lista operadores lógicos
      tags:
      - Automation
  /api/v1/automation/triggers:
    get:
      description: Retorna todos os triggers do sistema e customizados
      parameters:
      - description: Filtrar por categoria (session, message, pipeline, temporal,
          transaction, behavior)
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              custom_triggers:
                items:
                  $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.TriggerResponse'
                type: array
              system_triggers:
                items:
                  $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.TriggerResponse'
                type: array
            type: object
      summary: Lista triggers disponíveis
      tags:
      - Automation
  /api/v1/automation/triggers/{code}:
    get:
      description: Retorna metadados completos de um trigger incluindo parâmetros
        disponíveis
      parameters:
      - description: Código do trigger
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.TriggerResponse'
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Detalhes de um trigger
      tags:
      - Automation
  /api/v1/automation/triggers/custom:
    post:
      consumes:
      - application/json
      description: Permite que admins registrem triggers customizados com prefixo
        'custom.'
      parameters:
      - description: Metadados do trigger
        in: body
        name: trigger
        required: true
        schema:
          properties:
            code:
              type: string
            description:
              type: string
            name:
              type: string
            parameters:
              items:
                properties:
                  description:
                    type: string
                  name:
                    type: string
                  type:
                    type: string
                type: object
              type: array
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              message:
                type: string
              trigger:
                $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.TriggerResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Registrar trigger customizado
      tags:
      - Automation
  /api/v1/automation/triggers/custom/{code}:
    delete:
      description: Remove trigger customizado previamente registrado
      parameters:
      - description: Código do trigger customizado
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Remover trigger customizado
      tags:
      - Automation
  /api/v1/automation/types:
    get:
      description: Retorna todos os tipos de automação disponíveis (follow-up, event,
        scheduled, etc)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_http_dto.AutomationTypeResponse'
            type: array
      summary: Lista tipos de automação
      tags:
      - Automation
  /api/v1/channels:
    get:
      description: Lista todos os canais do usuário autenticado
      produces:
      - application/json
      responses:
        "200":
          description: Channels list
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List channels
      tags:
      - channels
    post:
      consumes:
      - application/json
      description: Cria um novo canal de comunicação (WAHA, WhatsApp, etc.)
      parameters:
      - description: Channel data
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateChannelRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Channel created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Access denied
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create channel
      tags:
      - channels
  /api/v1/channels/{channel_id}/sessions:
    get:
      description: Lista todas as sessões. Quando usado no endpoint global /sessions,
        requer contact_id ou channel_id
      parameters:
      - description: Filter by contact ID (UUID) - required for global endpoint
        in: query
        name: contact_id
        type: string
      - description: Filter by channel ID (UUID) - required for global endpoint
        in: query
        name: channel_id
        type: string
      - description: Filter by status (active, ended)
        in: query
        name: status
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of sessions
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List sessions
      tags:
      - sessions
  /api/v1/channels/{id}:
    delete:
      description: Deleta um canal de comunicação
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Channel deleted
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete channel
      tags:
      - channels
    get:
      description: Obtém detalhes de um canal específico
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Channel details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel
      tags:
      - channels
  /api/v1/channels/{id}/activate:
    post:
      description: Ativa um canal de comunicação
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Channel activated
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Activate channel
      tags:
      - channels
  /api/v1/channels/{id}/activate-waha:
    post:
      consumes:
      - application/json
      description: Ativa e inicializa uma sessão WAHA para um canal
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: WAHA channel activated
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request or not WAHA channel
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Activate WAHA channel
      tags:
      - channels
  /api/v1/channels/{id}/configure-webhook:
    post:
      consumes:
      - application/json
      description: 'Configura automaticamente o webhook no canal externo (ex: WAHA)'
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      - description: Webhook configuration (optional, uses default if not provided)
        in: body
        name: request
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ConfigureWebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Webhook configured
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Configuration failed
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Configure channel webhook
      tags:
      - channels
  /api/v1/channels/{id}/deactivate:
    post:
      description: Desativa um canal de comunicação
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Channel deactivated
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Deactivate channel
      tags:
      - channels
  /api/v1/channels/{id}/import-history:
    post:
      consumes:
      - application/json
      description: Importa histórico de mensagens de um canal WAHA (chats e mensagens)
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      - description: Import configuration (optional)
        in: body
        name: request
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ImportWAHAHistoryRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Import started (async)
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request or not WAHA channel
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Import WAHA message history
      tags:
      - channels
  /api/v1/channels/{id}/sessions/{session_id}:
    get:
      description: Obtém detalhes de uma sessão específica
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid session ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Session not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get session by ID
      tags:
      - sessions
  /api/v1/channels/{id}/webhook-info:
    get:
      description: Retorna informações detalhadas sobre o webhook do canal
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Webhook info
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel webhook info
      tags:
      - channels
  /api/v1/channels/{id}/webhook-url:
    get:
      description: Retorna a URL do webhook que deve ser configurada no canal externo
        (WAHA, WhatsApp, etc)
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Webhook URL
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel webhook URL
      tags:
      - channels
  /api/v1/contacts:
    get:
      consumes:
      - application/json
      description: Lista todos os contatos com filtros opcionais (apenas do usuário
        autenticado)
      parameters:
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of contacts
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Project not owned by user
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List contacts
      tags:
      - contacts
    post:
      consumes:
      - application/json
      description: Create a new contact in the system
      parameters:
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      - description: Contact data
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateContactRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Contact created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new contact
      tags:
      - contacts
  /api/v1/contacts/{contact_id}/domain-events:
    get:
      description: Lista todos os eventos de domínio disparados para um contato
      parameters:
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List domain events by contact
      tags:
      - domain-events
  /api/v1/contacts/{contact_id}/events:
    get:
      description: List contact events with filtering and pagination
      parameters:
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: string
      - description: Filter by categories (comma-separated)
        in: query
        name: categories
        type: string
      - description: Filter by priority
        in: query
        name: priority
        type: string
      - description: 'Limit (default: 50, max: 200)'
        in: query
        name: limit
        type: integer
      - description: 'Offset (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List contact events
      tags:
      - contact-events
  /api/v1/contacts/{contact_id}/events/stream:
    get:
      description: Stream contact events in real-time using Server-Sent Events (SSE).
        Requires authentication.
      parameters:
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: string
      - description: 'Filter by categories (comma-separated): status,pipeline,assignment,tag,note,session,custom_field,system,notification'
        in: query
        name: categories
        type: string
      - description: 'Filter by priority: low,normal,high,urgent'
        in: query
        name: priority
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Event stream
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - no access to this contact
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Stream contact events
      tags:
      - contact-events
  /api/v1/contacts/{contact_id}/events/stream/{category}:
    get:
      description: Stream contact events filtered by specific category
      parameters:
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: string
      - description: 'Category: status,pipeline,assignment,tag,note,session,custom_field,system,notification'
        in: path
        name: category
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Event stream
          schema:
            type: string
      summary: Stream contact events by category
      tags:
      - contact-events
  /api/v1/contacts/{contact_id}/sessions:
    get:
      description: Lista todas as sessões. Quando usado no endpoint global /sessions,
        requer contact_id ou channel_id
      parameters:
      - description: Filter by contact ID (UUID) - required for global endpoint
        in: query
        name: contact_id
        type: string
      - description: Filter by channel ID (UUID) - required for global endpoint
        in: query
        name: channel_id
        type: string
      - description: Filter by status (active, ended)
        in: query
        name: status
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of sessions
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List sessions
      tags:
      - sessions
  /api/v1/contacts/{contact_id}/trackings:
    get:
      description: Retorna todos os trackings de um contato específico
      parameters:
      - description: ID do contato
        in: path
        name: contact_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_caloi_ventros-crm_internal_application_tracking.TrackingDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - BearerAuth: []
      summary: Busca trackings de um contato
      tags:
      - tracking
  /api/v1/contacts/{id}:
    delete:
      description: Remove um contato (soft delete)
      parameters:
      - description: Contact ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Contact deleted successfully
        "400":
          description: Invalid contact ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Contact not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete contact
      tags:
      - contacts
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific contact
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contact details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid contact ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Contact not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get contact by ID
      tags:
      - contacts
    put:
      consumes:
      - application/json
      description: Atualiza um contato existente
      parameters:
      - description: Contact ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Contact update data
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateContactRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Contact updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Contact not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update contact
      tags:
      - contacts
  /api/v1/contacts/{id}/pipelines/{pipeline_id}/status:
    put:
      consumes:
      - application/json
      description: Altera o status de um contato em um pipeline específico
      parameters:
      - description: Contact ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Pipeline ID (UUID)
        in: path
        name: pipeline_id
        required: true
        type: string
      - description: Status change request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ChangePipelineStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Status changed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Contact or pipeline not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Change contact pipeline status
      tags:
      - contacts
  /api/v1/contacts/{id}/sessions/{session_id}:
    get:
      description: Obtém detalhes de uma sessão específica
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid session ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Session not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get session by ID
      tags:
      - sessions
  /api/v1/domain-events:
    get:
      description: Lista todos os eventos de domínio disparados em um projeto
      parameters:
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      - description: 'Limit (default: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List domain events by project
      tags:
      - domain-events
  /api/v1/domain-events/by-type:
    get:
      description: Lista eventos de domínio filtrados por tipo
      parameters:
      - description: Event Type (e.g., contact.created, session.started)
        in: query
        name: event_type
        required: true
        type: string
      - description: 'Limit (default: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List domain events by type
      tags:
      - domain-events
  /api/v1/messages:
    get:
      description: Lista mensagens com filtros opcionais
      parameters:
      - description: Filter by session ID (UUID)
        in: query
        name: session_id
        type: string
      - description: Filter by contact ID (UUID)
        in: query
        name: contact_id
        type: string
      - description: Filter by direction (inbound, outbound)
        in: query
        name: direction
        type: string
      - description: Filter by message type
        in: query
        name: message_type
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of messages
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List messages
      tags:
      - messages
    post:
      consumes:
      - application/json
      description: Cria uma nova mensagem
      parameters:
      - description: Message data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateMessageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Message created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create message
      tags:
      - messages
  /api/v1/messages/{id}:
    delete:
      description: Remove uma mensagem (soft delete)
      parameters:
      - description: Message ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Message deleted successfully
        "400":
          description: Invalid message ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Message not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete message
      tags:
      - messages
    get:
      description: Obtém detalhes de uma mensagem específica
      parameters:
      - description: Message ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid message ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Message not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get message by ID
      tags:
      - messages
    put:
      consumes:
      - application/json
      description: Atualiza uma mensagem existente
      parameters:
      - description: Message ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Message update data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Message updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Message not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update message
      tags:
      - messages
  /api/v1/pipelines:
    get:
      description: Lista todos os pipelines de um projeto (apenas do usuário autenticado)
      parameters:
      - description: Project ID (UUID)
        in: query
        name: project_id
        required: true
        type: string
      - description: Filter by active status
        in: query
        name: active
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of pipelines
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Project not owned by user
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List pipelines
      tags:
      - pipelines
    post:
      consumes:
      - application/json
      description: Cria um novo pipeline
      parameters:
      - description: Project ID (UUID)
        in: query
        name: project_id
        required: true
        type: string
      - description: Pipeline data
        in: body
        name: pipeline
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreatePipelineRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Pipeline created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create pipeline
      tags:
      - pipelines
  /api/v1/pipelines/{id}:
    get:
      description: Obtém detalhes de um pipeline específico com seus status
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Pipeline details with statuses
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid pipeline ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Pipeline not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get pipeline by ID
      tags:
      - pipelines
  /api/v1/pipelines/{id}/statuses:
    post:
      consumes:
      - application/json
      description: Cria um novo status em um pipeline
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Status data
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateStatusRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Status created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Pipeline not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create status
      tags:
      - pipelines
  /api/v1/pipelines/{pipeline_id}/contacts/{contact_id}/status:
    get:
      description: Obtém o status atual de um contato em um pipeline
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: pipeline_id
        required: true
        type: string
      - description: Contact ID (UUID)
        in: path
        name: contact_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contact status
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Status not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get contact status
      tags:
      - pipelines
    put:
      consumes:
      - application/json
      description: Altera o status de um contato em um pipeline
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: pipeline_id
        required: true
        type: string
      - description: Contact ID (UUID)
        in: path
        name: contact_id
        required: true
        type: string
      - description: Status change data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ChangeContactStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Status changed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Pipeline or contact not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Change contact status
      tags:
      - pipelines
  /api/v1/projects:
    get:
      description: Lista todos os projetos do usuário autenticado
      parameters:
      - description: Filter by tenant ID
        in: query
        name: tenant_id
        type: string
      - description: Filter by active status
        in: query
        name: active
        type: boolean
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of projects
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Cria um novo projeto
      parameters:
      - description: Project data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Project created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create project
      tags:
      - projects
  /api/v1/projects/{id}:
    delete:
      description: Remove um projeto (soft delete)
      parameters:
      - description: Project ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Project deleted successfully
        "400":
          description: Invalid project ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Project not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete project
      tags:
      - projects
    get:
      description: Obtém detalhes de um projeto específico
      parameters:
      - description: Project ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Project details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid project ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Project not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Atualiza um projeto existente
      parameters:
      - description: Project ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Project update data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Project updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Project not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update project
      tags:
      - projects
  /api/v1/queues:
    get:
      description: Lista todas as filas do RabbitMQ com número de mensagens e consumers
      produces:
      - application/json
      responses:
        "200":
          description: Queue statistics
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List RabbitMQ queues
      tags:
      - queues
  /api/v1/sessions:
    get:
      description: Lista todas as sessões. Quando usado no endpoint global /sessions,
        requer contact_id ou channel_id
      parameters:
      - description: Filter by contact ID (UUID) - required for global endpoint
        in: query
        name: contact_id
        type: string
      - description: Filter by channel ID (UUID) - required for global endpoint
        in: query
        name: channel_id
        type: string
      - description: Filter by status (active, ended)
        in: query
        name: status
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of sessions
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List sessions
      tags:
      - sessions
  /api/v1/sessions/{id}:
    get:
      description: Obtém detalhes de uma sessão específica
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid session ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Session not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get session by ID
      tags:
      - sessions
  /api/v1/sessions/{id}/close:
    post:
      consumes:
      - application/json
      description: Encerra uma sessão manualmente. Apenas agentes podem encerrar sessões.
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Close session request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CloseSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Session closed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Session not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Close session
      tags:
      - sessions
  /api/v1/sessions/{session_id}/domain-events:
    get:
      description: Lista todos os eventos de domínio disparados para uma sessão
      parameters:
      - description: Session ID
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List domain events by session
      tags:
      - domain-events
  /api/v1/sessions/{session_id}/messages:
    get:
      description: Obtém todas as mensagens de uma sessão específica
      parameters:
      - description: Session ID (UUID)
        in: path
        name: session_id
        required: true
        type: string
      - default: 100
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of messages
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Invalid session ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get messages by session
      tags:
      - messages
  /api/v1/sessions/stats:
    get:
      description: Obtém estatísticas das sessões por tenant
      parameters:
      - description: Tenant ID
        in: query
        name: tenant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session statistics
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Missing tenant ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get session statistics
      tags:
      - sessions
  /api/v1/test/waha-connection:
    post:
      consumes:
      - application/json
      description: Testa a conexão com a API WAHA usando token e base URL
      parameters:
      - description: WAHA connection data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.TestWAHARequest'
      produces:
      - application/json
      responses:
        "200":
          description: Connection test result
          schema:
            additionalProperties: true
            type: object
      summary: Test WAHA connection
      tags:
      - test
  /api/v1/test/waha-qr:
    post:
      consumes:
      - application/json
      description: Simula recebimento de um QR code da WAHA para teste
      parameters:
      - description: QR code test data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.TestQRCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: QR code test result
          schema:
            additionalProperties: true
            type: object
      summary: Test WAHA QR code
      tags:
      - test
  /api/v1/trackings:
    post:
      consumes:
      - application/json
      description: Cria um novo registro de tracking para rastrear origem de contato
        (anúncios, campanhas, etc)
      parameters:
      - description: Dados do tracking
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateTrackingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_internal_application_tracking.TrackingDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - BearerAuth: []
      summary: Cria um novo tracking de conversão
      tags:
      - tracking
  /api/v1/trackings/{id}:
    get:
      description: Retorna um tracking específico por ID
      parameters:
      - description: ID do tracking
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_internal_application_tracking.TrackingDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      security:
      - BearerAuth: []
      summary: Busca tracking por ID
      tags:
      - tracking
  /api/v1/trackings/decode:
    post:
      consumes:
      - application/json
      description: Extrai código invisível ternário de mensagem para identificar tracking
      parameters:
      - description: Mensagem para decode
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_caloi_ventros-crm_internal_application_tracking.DecodeTrackingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_internal_application_tracking.DecodeTrackingResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
      security:
      - BearerAuth: []
      summary: Decodifica mensagem WhatsApp para extrair tracking ID
      tags:
      - tracking
  /api/v1/trackings/encode:
    post:
      consumes:
      - application/json
      description: Insere código invisível ternário em mensagem para rastreamento
      parameters:
      - description: Dados para encode
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_caloi_ventros-crm_internal_application_tracking.EncodeTrackingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_internal_application_tracking.EncodeTrackingResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - BearerAuth: []
      summary: Codifica tracking ID em mensagem WhatsApp
      tags:
      - tracking
  /api/v1/trackings/enums:
    get:
      description: Retorna todos os valores válidos de enums para construir trackings
        (plataformas, mediums, táticas, formatos, etc)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.TrackingEnumsResponse'
      security:
      - BearerAuth: []
      summary: Lista todos os enums disponíveis para tracking
      tags:
      - tracking
  /api/v1/webhook-subscriptions:
    get:
      description: Lista todas as inscrições de webhooks
      parameters:
      - description: Filter by active status
        in: query
        name: active
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of webhooks
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List webhook subscriptions
      tags:
      - webhooks
    post:
      consumes:
      - application/json
      description: Cria uma nova inscrição de webhook para receber eventos do WAHA
      parameters:
      - description: Webhook subscription data
        in: body
        name: webhook
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateWebhookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Webhook created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create webhook subscription
      tags:
      - webhooks
  /api/v1/webhook-subscriptions/{id}:
    delete:
      description: Remove uma inscrição de webhook
      parameters:
      - description: Webhook ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Webhook deleted successfully
        "404":
          description: Webhook not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete webhook subscription
      tags:
      - webhooks
    get:
      description: Obtém detalhes de uma inscrição de webhook
      parameters:
      - description: Webhook ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Webhook details
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Webhook not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get webhook subscription
      tags:
      - webhooks
    put:
      consumes:
      - application/json
      description: Atualiza uma inscrição de webhook
      parameters:
      - description: Webhook ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Webhook update data
        in: body
        name: webhook
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateWebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Webhook updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Webhook not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update webhook subscription
      tags:
      - webhooks
  /api/v1/webhook-subscriptions/available-events:
    get:
      description: Lista todos os eventos WAHA disponíveis para inscrição
      produces:
      - application/json
      responses:
        "200":
          description: Available events
          schema:
            additionalProperties: true
            type: object
      summary: Get available WAHA events
      tags:
      - webhooks
  /api/v1/webhooks/waha:
    get:
      description: Retorna informações sobre o endpoint de webhook WAHA
      produces:
      - application/json
      responses:
        "200":
          description: Webhook info
          schema:
            additionalProperties: true
            type: object
      summary: Get webhook info
      tags:
      - webhooks
  /api/v1/webhooks/waha/{session}:
    post:
      consumes:
      - application/json
      description: Recebe eventos de webhook do WAHA (mensagens, chamadas, etc.)
      parameters:
      - description: Session ID
        in: path
        name: session
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Event queued
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Receive WAHA webhook
      tags:
      - webhooks
  /health:
    get:
      consumes:
      - application/json
      description: Check if the API is running (basic liveness check)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.HealthResponse'
      summary: Health check
      tags:
      - health
  /health/database:
    get:
      consumes:
      - application/json
      description: Check database connectivity and connection pool status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
      summary: Database health check
      tags:
      - health
  /health/migrations:
    get:
      consumes:
      - application/json
      description: Check database migration status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
      summary: Database migrations health check
      tags:
      - health
  /health/rabbitmq:
    get:
      consumes:
      - application/json
      description: Check RabbitMQ connectivity
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
      summary: RabbitMQ health check
      tags:
      - health
  /health/redis:
    get:
      consumes:
      - application/json
      description: Check Redis connectivity and status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
      summary: Redis health check
      tags:
      - health
  /health/temporal:
    get:
      consumes:
      - application/json
      description: Check Temporal workflow engine connectivity
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult'
      summary: Temporal health check
      tags:
      - health
  /live:
    get:
      consumes:
      - application/json
      description: Check if the API is alive (always returns 200 if service is running)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.HealthResponse'
      summary: Liveness check
      tags:
      - health
  /ready:
    get:
      consumes:
      - application/json
      description: Check if the API is ready to serve requests (includes all dependency
        checks)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.HealthResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.HealthResponse'
      summary: Readiness check
      tags:
      - health
  /test/cleanup:
    post:
      description: Remove todos os dados de teste criados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Cleanup test environment
      tags:
      - test
  /test/send-waha-message:
    post:
      description: Envia mensagem WAHA automaticamente para o webhook interno
      parameters:
      - description: 'Message type: fb_ads, text, image (default: fb_ads)'
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Send WAHA message automatically
      tags:
      - test
  /test/setup:
    post:
      description: Limpa e cria project, pipeline, channel types e webhook para testes
      parameters:
      - description: URL do webhook externo (opcional)
        in: query
        name: webhook_url
        type: string
      - description: 'Base URL da API (opcional, default: http://localhost:8080)'
        in: query
        name: api_base_url
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Setup test environment
      tags:
      - test
  /test/waha-message:
    post:
      description: Envia mensagem WAHA de teste com dados de tracking do Facebook/Instagram
      parameters:
      - description: 'Message type: fb_ads, text, image (default: fb_ads)'
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Test WAHA message with tracking
      tags:
      - test
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    description: API Key authentication for service-to-service communication
    in: header
    name: X-API-Key
    type: apiKey
  BearerAuth:
    description: 'Bearer token authentication. Format: "Bearer {token}"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
