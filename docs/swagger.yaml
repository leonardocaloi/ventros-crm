basePath: /
definitions:
  Error:
    properties:
      details:
        additionalProperties: true
        type: object
      error:
        example: Validation failed
        type: string
      message:
        example: Invalid email format
        type: string
    type: object
  github_com_ventros_crm_infrastructure_health.CheckResult:
    properties:
      duration_ms:
        example: 15
        type: integer
      message:
        example: database is operational
        type: string
      metadata:
        additionalProperties: true
        type: object
      status:
        allOf:
        - $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.Status'
        example: healthy
      timestamp:
        example: "2024-01-01T00:00:00Z"
        type: string
    type: object
  github_com_ventros_crm_infrastructure_health.Status:
    enum:
    - healthy
    - degraded
    - unhealthy
    type: string
    x-enum-varnames:
    - StatusHealthy
    - StatusDegraded
    - StatusUnhealthy
  github_com_ventros_crm_infrastructure_http_dto.ActionParameterDTO:
    properties:
      default: {}
      description:
        type: string
      name:
        type: string
      required:
        type: boolean
      type:
        type: string
    type: object
  github_com_ventros_crm_infrastructure_http_dto.ActionResponse:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      example:
        additionalProperties: true
        type: object
      name:
        type: string
      parameters:
        items:
          $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.ActionParameterDTO'
        type: array
    type: object
  github_com_ventros_crm_infrastructure_http_dto.AutomationDiscoveryResponse:
    properties:
      actions:
        items:
          $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.ActionResponse'
        type: array
      logic_types:
        items:
          $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.LogicOperatorResponse'
        type: array
      operators:
        items:
          $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.ConditionOperatorResponse'
        type: array
      triggers:
        items:
          $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.TriggerResponse'
        type: array
      types:
        items:
          $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.AutomationTypeResponse'
        type: array
    type: object
  github_com_ventros_crm_infrastructure_http_dto.AutomationTypeResponse:
    properties:
      code:
        type: string
      description:
        type: string
      examples:
        items:
          type: string
        type: array
      icon:
        type: string
      name:
        type: string
    type: object
  github_com_ventros_crm_infrastructure_http_dto.ConditionOperatorResponse:
    properties:
      code:
        type: string
      description:
        type: string
      example:
        type: string
      name:
        type: string
    type: object
  github_com_ventros_crm_infrastructure_http_dto.LogicOperatorResponse:
    properties:
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  github_com_ventros_crm_infrastructure_http_dto.TriggerParameter:
    properties:
      description:
        type: string
      example:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  github_com_ventros_crm_infrastructure_http_dto.TriggerResponse:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      is_system:
        type: boolean
      name:
        type: string
      parameters:
        items:
          $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.TriggerParameter'
        type: array
    type: object
  github_com_ventros_crm_internal_application_queries.AgentDTO:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  github_com_ventros_crm_internal_application_queries.AgentSearchResultDTO:
    properties:
      active:
        type: boolean
      email:
        type: string
      id:
        type: string
      match_field:
        type: string
      match_score:
        type: number
      name:
        type: string
    type: object
  github_com_ventros_crm_internal_application_queries.ListAgentsResponse:
    properties:
      agents:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.AgentDTO'
        type: array
      limit:
        type: integer
      page:
        type: integer
      totalCount:
        format: int64
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_ventros_crm_internal_application_queries.ListMessageDTO:
    properties:
      agent_id:
        type: string
      channel_id:
        type: string
      contact_id:
        type: string
      content_type:
        type: string
      from_me:
        type: boolean
      id:
        type: string
      media_url:
        type: string
      metadata:
        additionalProperties: true
        type: object
      session_id:
        type: string
      status:
        type: string
      text:
        type: string
      timestamp:
        type: string
    type: object
  github_com_ventros_crm_internal_application_queries.ListMessagesResponse:
    properties:
      limit:
        type: integer
      messages:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.ListMessageDTO'
        type: array
      page:
        type: integer
      totalCount:
        format: int64
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_ventros_crm_internal_application_queries.ListNotesResponse:
    properties:
      limit:
        type: integer
      notes:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.NoteDTO'
        type: array
      page:
        type: integer
      totalCount:
        format: int64
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_ventros_crm_internal_application_queries.ListPipelinesResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      pipelines:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.PipelineDTO'
        type: array
      totalCount:
        format: int64
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_ventros_crm_internal_application_queries.ListProjectsResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      projects:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.ProjectDTO'
        type: array
      totalCount:
        format: int64
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_ventros_crm_internal_application_queries.ListSessionsResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      sessions:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.SessionDTO'
        type: array
      totalCount:
        format: int64
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_ventros_crm_internal_application_queries.MessageSearchResultDTO:
    properties:
      contact_id:
        type: string
      content_type:
        type: string
      from_me:
        type: boolean
      id:
        type: string
      match_score:
        type: number
      text:
        type: string
      timestamp:
        type: string
    type: object
  github_com_ventros_crm_internal_application_queries.NoteDTO:
    properties:
      author_id:
        type: string
      author_name:
        type: string
      author_type:
        type: string
      contact_id:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      note_type:
        type: string
      pinned:
        type: boolean
      priority:
        type: string
      session_id:
        type: string
      tags:
        items:
          type: string
        type: array
      updated_at:
        type: string
      visible_to_client:
        type: boolean
    type: object
  github_com_ventros_crm_internal_application_queries.NoteSearchResultDTO:
    properties:
      author_name:
        type: string
      contact_id:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      match_field:
        type: string
      match_score:
        type: number
      note_type:
        type: string
      pinned:
        type: boolean
      priority:
        type: string
    type: object
  github_com_ventros_crm_internal_application_queries.PipelineDTO:
    properties:
      active:
        type: boolean
      color:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      position:
        type: integer
      project_id:
        type: string
      session_timeout_minutes:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_ventros_crm_internal_application_queries.PipelineSearchResultDTO:
    properties:
      active:
        type: boolean
      color:
        type: string
      description:
        type: string
      id:
        type: string
      match_field:
        type: string
      match_score:
        type: number
      name:
        type: string
    type: object
  github_com_ventros_crm_internal_application_queries.ProjectDTO:
    properties:
      active:
        type: boolean
      billing_account_id:
        type: string
      configuration:
        additionalProperties: true
        type: object
      created_at:
        type: string
      customer_id:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      session_timeout_minutes:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_ventros_crm_internal_application_queries.ProjectSearchResultDTO:
    properties:
      active:
        type: boolean
      description:
        type: string
      id:
        type: string
      match_field:
        type: string
      match_score:
        type: number
      name:
        type: string
    type: object
  github_com_ventros_crm_internal_application_queries.SearchAgentsResponse:
    properties:
      agents:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.AgentSearchResultDTO'
        type: array
      count:
        type: integer
    type: object
  github_com_ventros_crm_internal_application_queries.SearchMessagesResponse:
    properties:
      count:
        type: integer
      messages:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.MessageSearchResultDTO'
        type: array
    type: object
  github_com_ventros_crm_internal_application_queries.SearchNotesResponse:
    properties:
      count:
        type: integer
      notes:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.NoteSearchResultDTO'
        type: array
    type: object
  github_com_ventros_crm_internal_application_queries.SearchPipelinesResponse:
    properties:
      count:
        type: integer
      pipelines:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.PipelineSearchResultDTO'
        type: array
    type: object
  github_com_ventros_crm_internal_application_queries.SearchProjectsResponse:
    properties:
      count:
        type: integer
      projects:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.ProjectSearchResultDTO'
        type: array
    type: object
  github_com_ventros_crm_internal_application_queries.SearchSessionsResponse:
    properties:
      count:
        type: integer
      sessions:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.SessionSearchResultDTO'
        type: array
    type: object
  github_com_ventros_crm_internal_application_queries.SessionDTO:
    properties:
      contact_id:
        type: string
      converted:
        type: boolean
      duration_seconds:
        type: integer
      ended_at:
        type: string
      escalated:
        type: boolean
      id:
        type: string
      message_count:
        type: integer
      messages_from_agent:
        type: integer
      messages_from_contact:
        type: integer
      outcome_tags:
        items:
          type: string
        type: array
      pipeline_id:
        type: string
      resolved:
        type: boolean
      sentiment:
        type: string
      started_at:
        type: string
      status:
        type: string
      summary:
        type: string
      topics:
        items:
          type: string
        type: array
    type: object
  github_com_ventros_crm_internal_application_queries.SessionSearchResultDTO:
    properties:
      contact_id:
        type: string
      id:
        type: string
      match_field:
        type: string
      match_score:
        type: number
      message_count:
        type: integer
      started_at:
        type: string
      status:
        type: string
      summary:
        type: string
      topics:
        items:
          type: string
        type: array
    type: object
  github_com_ventros_crm_internal_application_tracking.DecodeTrackingRequest:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  github_com_ventros_crm_internal_application_tracking.DecodeTrackingResponse:
    properties:
      analysis:
        additionalProperties: true
        type: object
      clean_message:
        type: string
      confidence:
        type: string
      decoded_decimal:
        type: integer
      decoded_ternary:
        type: string
      error:
        type: string
      original_message:
        type: string
      success:
        type: boolean
    type: object
  github_com_ventros_crm_internal_application_tracking.EncodeTrackingRequest:
    properties:
      message:
        type: string
      phone:
        type: string
      tracking_id:
        type: integer
    required:
    - message
    - tracking_id
    type: object
  github_com_ventros_crm_internal_application_tracking.EncodeTrackingResponse:
    properties:
      debug:
        additionalProperties: true
        type: object
      decimal_value:
        type: integer
      invisible_code:
        type: string
      message_with_code:
        type: string
      original_message:
        type: string
      phone:
        type: string
      success:
        type: boolean
      ternary_encoded:
        type: string
      tracking_id:
        type: integer
      whatsapp_link:
        type: string
    type: object
  github_com_ventros_crm_internal_application_tracking.TrackingDTO:
    properties:
      ad_id:
        type: string
      ad_url:
        type: string
      campaign:
        type: string
      click_id:
        type: string
      contact_id:
        type: string
      conversion_data:
        type: string
      created_at:
        type: string
      id:
        type: string
      metadata:
        additionalProperties: true
        type: object
      platform:
        type: string
      project_id:
        type: string
      session_id:
        type: string
      source:
        type: string
      tenant_id:
        type: string
      updated_at:
        type: string
      utm_campaign:
        type: string
      utm_content:
        type: string
      utm_medium:
        type: string
      utm_source:
        type: string
      utm_term:
        type: string
    type: object
  github_com_ventros_crm_internal_domain_crm_pipeline.AutomationAction:
    enum:
    - send_message
    - send_template
    - change_pipeline_status
    - assign_agent
    - assign_to_queue
    - create_task
    - add_tag
    - remove_tag
    - update_custom_field
    - create_note
    - create_agent_report
    - send_webhook
    - trigger_workflow
    - notify_agent
    - notify_coordinator
    - send_email
    type: string
    x-enum-varnames:
    - ActionSendMessage
    - ActionSendTemplate
    - ActionChangeStatus
    - ActionAssignAgent
    - ActionAssignToQueue
    - ActionCreateTask
    - ActionAddTag
    - ActionRemoveTag
    - ActionUpdateCustomField
    - ActionCreateNote
    - ActionCreateAgentReport
    - ActionSendWebhook
    - ActionTriggerWorkflow
    - ActionNotifyAgent
    - ActionNotifyCoordinator
    - ActionSendEmail
  github_com_ventros_crm_internal_domain_crm_pipeline.RuleAction:
    properties:
      delay_minutes:
        type: integer
      params:
        additionalProperties: true
        type: object
      type:
        $ref: '#/definitions/github_com_ventros_crm_internal_domain_crm_pipeline.AutomationAction'
    type: object
  github_com_ventros_crm_internal_domain_crm_pipeline.RuleCondition:
    properties:
      field:
        type: string
      operator:
        type: string
      value: {}
    type: object
  github_com_ventros_crm_internal_domain_crm_pipeline.StatusType:
    enum:
    - open
    - active
    - closed
    type: string
    x-enum-varnames:
    - StatusTypeOpen
    - StatusTypeActive
    - StatusTypeClosed
  infrastructure_http_handlers.AddParticipantRequest:
    properties:
      participant_id:
        type: string
      participant_type:
        example: agent
        type: string
    required:
    - participant_id
    - participant_type
    type: object
  infrastructure_http_handlers.ChangeContactStatusRequest:
    properties:
      notes:
        example: Cliente interessado no produto X
        type: string
      reason:
        example: Contato respondeu
        type: string
      status_id:
        type: string
    required:
    - status_id
    type: object
  infrastructure_http_handlers.ChangePipelineStatusRequest:
    properties:
      reason:
        type: string
      status_id:
        type: string
    required:
    - status_id
    type: object
  infrastructure_http_handlers.CloseSessionRequest:
    properties:
      notes:
        type: string
      reason:
        description: '"resolved", "transferred", "escalated", "agent_closed"'
        type: string
    required:
    - reason
    type: object
  infrastructure_http_handlers.ConfigureWebhookRequest:
    properties:
      base_url:
        example: https://api.ventros.com
        type: string
    type: object
  infrastructure_http_handlers.ConfirmMessageDeliveryRequest:
    properties:
      delivered_at:
        example: "2025-10-09T10:30:00Z"
        type: string
      external_id:
        example: wamid.123456
        type: string
      failure_reason:
        example: Message expired
        type: string
      message_id:
        type: string
      read_at:
        example: "2025-10-09T10:35:00Z"
        type: string
      status:
        example: delivered
        type: string
    required:
    - external_id
    - status
    type: object
  infrastructure_http_handlers.CreateAgentRequest:
    properties:
      department:
        example: vendas
        type: string
      email:
        example: joao@empresa.com
        type: string
      languages:
        example:
        - pt
        - en
        items:
          type: string
        type: array
      max_sessions:
        example: 5
        type: integer
      name:
        example: João Silva
        type: string
      phone:
        example: "+5511999999999"
        type: string
      role:
        example: agent
        type: string
      skills:
        example:
        - vendas
        - suporte
        items:
          type: string
        type: array
      tenant_id:
        example: tenant_123
        type: string
    required:
    - email
    - name
    - tenant_id
    type: object
  infrastructure_http_handlers.CreateAutomationRequest:
    properties:
      actions:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_domain_crm_pipeline.RuleAction'
        type: array
      automation_type:
        example: event
        type: string
      conditions:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_domain_crm_pipeline.RuleCondition'
        type: array
      description:
        example: Automatically send welcome message to new contacts
        type: string
      enabled:
        example: true
        type: boolean
      name:
        example: Send welcome message
        type: string
      pipeline_id:
        type: string
      priority:
        example: 10
        type: integer
      trigger:
        example: contact.created
        type: string
    required:
    - actions
    - automation_type
    - name
    - trigger
    type: object
  infrastructure_http_handlers.CreateBroadcastRequest:
    properties:
      list_id:
        type: string
      message_template:
        $ref: '#/definitions/infrastructure_http_handlers.MessageTemplateRequest'
      name:
        type: string
      rate_limit:
        type: integer
    required:
    - list_id
    - message_template
    - name
    type: object
  infrastructure_http_handlers.CreateCampaignRequest:
    properties:
      description:
        type: string
      goal_type:
        type: string
      goal_value:
        type: integer
      name:
        type: string
      steps:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.CreateCampaignStepRequest'
        type: array
    required:
    - goal_type
    - name
    type: object
  infrastructure_http_handlers.CreateCampaignStepRequest:
    properties:
      conditions:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.StepConditionRequest'
        type: array
      config:
        $ref: '#/definitions/infrastructure_http_handlers.StepConfigRequest'
      name:
        type: string
      order:
        type: integer
      type:
        type: string
    required:
    - config
    - name
    - order
    - type
    type: object
  infrastructure_http_handlers.CreateChannelRequest:
    properties:
      allow_groups:
        example: false
        type: boolean
      name:
        example: WhatsApp Principal
        type: string
      session_timeout_minutes:
        example: 30
        type: integer
      tracking_enabled:
        example: true
        type: boolean
      type:
        example: waha
        type: string
      waha_config:
        $ref: '#/definitions/infrastructure_http_handlers.CreateWAHAConfigRequest'
    required:
    - name
    - type
    type: object
  infrastructure_http_handlers.CreateChatRequest:
    properties:
      chat_type:
        example: individual
        type: string
      contact_id:
        type: string
      creator_id:
        type: string
      subject:
        example: Team Discussion
        type: string
    required:
    - chat_type
    type: object
  infrastructure_http_handlers.CreateContactRequest:
    properties:
      custom_fields:
        additionalProperties:
          type: string
        example:
          company: Empresa XYZ
        type: object
      email:
        example: joao@example.com
        type: string
      external_id:
        example: ext_123
        type: string
      language:
        example: pt-BR
        type: string
      name:
        example: João Silva
        type: string
      phone:
        example: "+5511999999999"
        type: string
      source_channel:
        example: whatsapp
        type: string
      tags:
        example:
        - lead
        - whatsapp
        items:
          type: string
        type: array
      timezone:
        example: America/Sao_Paulo
        type: string
    required:
    - name
    type: object
  infrastructure_http_handlers.CreateMessageRequest:
    properties:
      channel_type_id:
        type: string
      contact_id:
        type: string
      content:
        example: Olá, como posso ajudar?
        type: string
      direction:
        example: inbound
        type: string
      external_id:
        example: msg_123
        type: string
      media_type:
        type: string
      media_url:
        type: string
      message_type:
        example: text
        type: string
      metadata:
        additionalProperties: true
        type: object
      reply_to_id:
        type: string
      session_id:
        type: string
    required:
    - channel_type_id
    - contact_id
    - content
    - session_id
    type: object
  infrastructure_http_handlers.CreatePipelineRequest:
    properties:
      color:
        example: '#3B82F6'
        type: string
      description:
        example: Pipeline de vendas principal
        type: string
      name:
        example: Vendas
        type: string
      position:
        example: 0
        type: integer
    required:
    - name
    type: object
  infrastructure_http_handlers.CreateProjectRequest:
    properties:
      description:
        example: Projeto principal de vendas
        type: string
      name:
        example: Projeto Vendas
        type: string
      tenant_id:
        example: tenant_123
        type: string
    required:
    - name
    - tenant_id
    type: object
  infrastructure_http_handlers.CreateSequenceRequest:
    properties:
      description:
        type: string
      name:
        type: string
      steps:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.CreateSequenceStepRequest'
        type: array
      trigger_type:
        type: string
    required:
    - name
    - trigger_type
    type: object
  infrastructure_http_handlers.CreateSequenceStepRequest:
    properties:
      delay_amount:
        type: integer
      delay_unit:
        type: string
      message_template:
        $ref: '#/definitions/infrastructure_http_handlers.MessageTemplateRequest'
      name:
        type: string
      order:
        type: integer
    required:
    - delay_amount
    - delay_unit
    - message_template
    - name
    - order
    type: object
  infrastructure_http_handlers.CreateStatusRequest:
    properties:
      color:
        example: '#10B981'
        type: string
      description:
        example: Lead recém chegado
        type: string
      name:
        example: Novo Lead
        type: string
      position:
        example: 0
        type: integer
      status_type:
        allOf:
        - $ref: '#/definitions/github_com_ventros_crm_internal_domain_crm_pipeline.StatusType'
        example: open
    required:
    - name
    - status_type
    type: object
  infrastructure_http_handlers.CreateTrackingRequest:
    properties:
      ad_id:
        type: string
      ad_url:
        type: string
      campaign:
        type: string
      click_id:
        type: string
      contact_id:
        type: string
      conversion_data:
        type: string
      metadata:
        additionalProperties: true
        type: object
      platform:
        description: instagram, facebook, etc
        type: string
      project_id:
        type: string
      session_id:
        type: string
      source:
        description: meta_ads, google_ads, etc
        type: string
      utm_campaign:
        type: string
      utm_content:
        type: string
      utm_medium:
        type: string
      utm_source:
        type: string
      utm_term:
        type: string
    required:
    - contact_id
    - platform
    - project_id
    - source
    type: object
  infrastructure_http_handlers.CreateUserRequest:
    properties:
      email:
        example: joao@empresa.com
        type: string
      name:
        example: João Silva
        type: string
      password:
        example: senha123
        type: string
      role:
        example: user
        type: string
    required:
    - email
    - name
    - password
    type: object
  infrastructure_http_handlers.CreateVirtualAgentRequest:
    properties:
      notes:
        example: Historical agent from old system
        type: string
      period_start:
        example: "2023-01-01T00:00:00Z"
        type: string
      project_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      reason:
        example: device_attribution
        type: string
      represents_person_name:
        example: Maria da Silva
        type: string
      source_device:
        example: whatsapp:5511999999999
        type: string
    required:
    - period_start
    - project_id
    - reason
    - represents_person_name
    type: object
  infrastructure_http_handlers.CreateWAHAConfigRequest:
    properties:
      api_key:
        example: your-waha-api-key
        type: string
      base_url:
        example: http://localhost:3000
        type: string
      session_id:
        example: default
        type: string
      token:
        example: your-waha-token
        type: string
      webhook_url:
        example: http://localhost:8080/api/v1/webhooks/waha
        type: string
    required:
    - base_url
    type: object
  infrastructure_http_handlers.CreateWebhookRequest:
    properties:
      events:
        example:
        - message
        - ack
        - call.received
        items:
          type: string
        type: array
      headers:
        additionalProperties:
          type: string
        example:
          Authorization: Bearer token123
        type: object
      name:
        example: N8N Webhook
        type: string
      retry_count:
        example: 3
        type: integer
      secret:
        example: my-secret-key
        type: string
      timeout_seconds:
        example: 30
        type: integer
      url:
        example: https://n8n.example.com/webhook/waha-events
        type: string
    required:
    - events
    - name
    - url
    type: object
  infrastructure_http_handlers.EndVirtualAgentPeriodRequest:
    properties:
      period_end:
        example: "2024-01-01T00:00:00Z"
        type: string
    required:
    - period_end
    type: object
  infrastructure_http_handlers.EnrollContactRequest:
    properties:
      contact_id:
        type: string
    required:
    - contact_id
    type: object
  infrastructure_http_handlers.EnumValue:
    properties:
      description:
        example: Facebook, Instagram, Messenger, Audience Network
        type: string
      label:
        example: Meta (Facebook/Instagram)
        type: string
      value:
        example: meta
        type: string
    type: object
  infrastructure_http_handlers.GenerateAPIKeyRequest:
    properties:
      name:
        example: Minha API Key
        type: string
    type: object
  infrastructure_http_handlers.HealthResponse:
    properties:
      dependencies:
        additionalProperties:
          $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
        type: object
      service:
        example: ventros-crm
        type: string
      status:
        example: healthy
        type: string
      timestamp:
        example: "2024-01-01T00:00:00Z"
        type: string
      version:
        example: 0.1.0
        type: string
    type: object
  infrastructure_http_handlers.ImportWAHAHistoryRequest:
    properties:
      limit:
        example: 100
        type: integer
      strategy:
        example: recent
        type: string
      time_range_days:
        description: Dias para filtrar mensagens (0 = usar config do canal)
        example: 7
        type: integer
    type: object
  infrastructure_http_handlers.LoginRequest:
    properties:
      email:
        example: joao@empresa.com
        type: string
      password:
        example: senha123
        type: string
    required:
    - email
    - password
    type: object
  infrastructure_http_handlers.MessageTemplateRequest:
    properties:
      content:
        type: string
      media_url:
        type: string
      template_id:
        type: string
      type:
        type: string
      variables:
        additionalProperties:
          type: string
        type: object
    required:
    - type
    type: object
  infrastructure_http_handlers.PlatformCompatibilityInfo:
    properties:
      description:
        type: string
      valid_mediums:
        items:
          type: string
        type: array
    type: object
  infrastructure_http_handlers.ScheduleBroadcastRequest:
    properties:
      scheduled_for:
        type: string
    required:
    - scheduled_for
    type: object
  infrastructure_http_handlers.ScheduleCampaignRequest:
    properties:
      start_date:
        type: string
    required:
    - start_date
    type: object
  infrastructure_http_handlers.SendMessageRequest:
    properties:
      channel_id:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      contact_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      content_type:
        example: text
        type: string
      media_url:
        example: https://example.com/image.jpg
        type: string
      metadata:
        additionalProperties: true
        type: object
      reply_to_id:
        type: string
      text:
        example: Hello, how can I help you?
        type: string
    required:
    - channel_id
    - contact_id
    - content_type
    type: object
  infrastructure_http_handlers.SendMessageResponse:
    properties:
      error:
        type: string
      external_id:
        example: wamid.123456
        type: string
      message_id:
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
      sent_at:
        example: "2025-10-09T10:30:00Z"
        type: string
      status:
        example: sent
        type: string
    type: object
  infrastructure_http_handlers.SetCustomFieldRequest:
    type: object
  infrastructure_http_handlers.StepConditionRequest:
    properties:
      field:
        type: string
      metadata:
        additionalProperties: true
        type: object
      operator:
        type: string
      type:
        type: string
      value: {}
    type: object
  infrastructure_http_handlers.StepConfigRequest:
    properties:
      broadcast_id:
        type: string
      condition_data:
        additionalProperties: true
        type: object
      condition_type:
        type: string
      delay_amount:
        type: integer
      delay_unit:
        type: string
      sequence_id:
        type: string
      timeout_step:
        type: integer
      wait_for:
        type: string
      wait_timeout:
        type: integer
    type: object
  infrastructure_http_handlers.TestQRCodeRequest:
    properties:
      channel_name:
        example: WhatsApp Teste
        type: string
      session_id:
        example: default
        type: string
    required:
    - channel_name
    - session_id
    type: object
  infrastructure_http_handlers.TestWAHARequest:
    properties:
      base_url:
        example: http://localhost:3000
        type: string
      token:
        example: your-waha-token
        type: string
    required:
    - base_url
    type: object
  infrastructure_http_handlers.TrackingEnumsResponse:
    properties:
      creative_formats:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      google_sources:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      marketing_tactics:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      mediums:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      meta_sources:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      mkt_direto_sources:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      offline_sources:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
      platform_compatibility:
        additionalProperties:
          $ref: '#/definitions/infrastructure_http_handlers.PlatformCompatibilityInfo'
        type: object
      platforms:
        items:
          $ref: '#/definitions/infrastructure_http_handlers.EnumValue'
        type: array
    type: object
  infrastructure_http_handlers.UpdateAgentRequest:
    properties:
      active:
        type: boolean
      department:
        type: string
      email:
        type: string
      languages:
        items:
          type: string
        type: array
      max_sessions:
        type: integer
      name:
        type: string
      phone:
        type: string
      role:
        type: string
      skills:
        items:
          type: string
        type: array
    type: object
  infrastructure_http_handlers.UpdateAutomationRequest:
    properties:
      actions:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_domain_crm_pipeline.RuleAction'
        type: array
      conditions:
        items:
          $ref: '#/definitions/github_com_ventros_crm_internal_domain_crm_pipeline.RuleCondition'
        type: array
      description:
        type: string
      enabled:
        type: boolean
      name:
        type: string
      priority:
        type: integer
    type: object
  infrastructure_http_handlers.UpdateBroadcastRequest:
    properties:
      message_template:
        $ref: '#/definitions/infrastructure_http_handlers.MessageTemplateRequest'
      name:
        type: string
      rate_limit:
        type: integer
    type: object
  infrastructure_http_handlers.UpdateCampaignRequest:
    properties:
      description:
        type: string
      goal_type:
        type: string
      goal_value:
        type: integer
      name:
        type: string
    type: object
  infrastructure_http_handlers.UpdateContactRequest:
    properties:
      custom_fields:
        additionalProperties:
          type: string
        type: object
      email:
        type: string
      external_id:
        type: string
      language:
        type: string
      name:
        type: string
      phone:
        type: string
      source_channel:
        type: string
      tags:
        items:
          type: string
        type: array
      timezone:
        type: string
    type: object
  infrastructure_http_handlers.UpdateMessageRequest:
    properties:
      content:
        type: string
      delivered_at:
        type: string
      metadata:
        additionalProperties: true
        type: object
      read_at:
        type: string
      status:
        type: string
    type: object
  infrastructure_http_handlers.UpdateProjectRequest:
    properties:
      active:
        type: boolean
      description:
        type: string
      name:
        type: string
    type: object
  infrastructure_http_handlers.UpdateSequenceRequest:
    properties:
      description:
        type: string
      exit_on_reply:
        type: boolean
      name:
        type: string
    type: object
  infrastructure_http_handlers.UpdateSubjectRequest:
    properties:
      subject:
        example: New Team Discussion
        type: string
    required:
    - subject
    type: object
  infrastructure_http_handlers.UpdateWebhookRequest:
    properties:
      active:
        type: boolean
      events:
        items:
          type: string
        type: array
      headers:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      retry_count:
        type: integer
      secret:
        type: string
      timeout_seconds:
        type: integer
      url:
        type: string
    type: object
  infrastructure_http_handlers.UploadResponse:
    properties:
      content_type:
        example: image/jpeg
        type: string
      filename:
        example: photo.jpg
        type: string
      path:
        example: media/project-id/images/uuid.jpg
        type: string
      size:
        example: 1048576
        type: integer
      url:
        example: https://storage.googleapis.com/bucket/media/images/uuid.jpg
        type: string
    type: object
info:
  contact:
    email: support@ventros.com
    name: API Support
  description: API para gerenciamento de CRM com eventos e workflows
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Ventros CRM API
  version: "1.0"
paths:
  /api/v1/agents:
    get:
      description: Lista todos os agentes com filtros opcionais
      parameters:
      - description: Filter by tenant ID
        in: query
        name: tenant_id
        type: string
      - description: Filter by active status
        in: query
        name: active
        type: boolean
      - description: Filter by role
        in: query
        name: role
        type: string
      - description: Filter by department
        in: query
        name: department
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of agents
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List agents
      tags:
      - CRM - Agents
    post:
      consumes:
      - application/json
      description: Cria um novo agente
      parameters:
      - description: Agent data
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateAgentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Agent created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create agent
      tags:
      - CRM - Agents
  /api/v1/agents/{id}:
    delete:
      description: Remove um agente (soft delete)
      parameters:
      - description: Agent ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Agent deleted successfully
        "400":
          description: Invalid agent ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Agent not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete agent
      tags:
      - CRM - Agents
    get:
      description: Obtém detalhes de um agente específico
      parameters:
      - description: Agent ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid agent ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Agent not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get agent by ID
      tags:
      - CRM - Agents
    put:
      consumes:
      - application/json
      description: Atualiza um agente existente
      parameters:
      - description: Agent ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Agent update data
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateAgentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Agent updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Agent not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update agent
      tags:
      - CRM - Agents
  /api/v1/agents/{id}/stats:
    get:
      description: Obtém estatísticas de um agente
      parameters:
      - description: Agent ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent statistics
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid agent ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Agent not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get agent statistics
      tags:
      - CRM - Agents
  /api/v1/auth/api-key:
    post:
      consumes:
      - application/json
      description: Gera uma nova API key para o usuário
      parameters:
      - description: API key request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.GenerateAPIKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: API key generated
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Gerar API Key
      tags:
      - AUTH - Authentication
  /api/v1/auth/info:
    get:
      description: Informações sobre autenticação para desenvolvimento
      produces:
      - application/json
      responses:
        "200":
          description: Auth information
          schema:
            additionalProperties: true
            type: object
      summary: Informações de Autenticação
      tags:
      - AUTH - Authentication
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário e retorna API key
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication failed
          schema:
            additionalProperties: true
            type: object
      summary: Login
      tags:
      - AUTH - Authentication
  /api/v1/auth/profile:
    get:
      description: Obtém o perfil do usuário autenticado
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Obter Perfil
      tags:
      - AUTH - Authentication
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Cria um novo usuário no sistema com projeto e pipeline default
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Criar Usuário
      tags:
      - AUTH - Authentication
  /api/v1/automation:
    get:
      description: Lista todas as automações (cross-product) do tenant autenticado
        com filtros avançados
      parameters:
      - description: Filter by automation type
        in: query
        name: automation_type
        type: string
      - description: Filter by enabled status
        in: query
        name: enabled
        type: boolean
      - description: Filter by pipeline ID (UUID)
        in: query
        name: pipeline_id
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of automations
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List all automations
      tags:
      - AUTOMATION - Automations
    post:
      consumes:
      - application/json
      description: Cria uma nova automação (cross-product ou pipeline-specific)
      parameters:
      - description: Automation data
        in: body
        name: automation
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateAutomationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Automation created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create automation
      tags:
      - AUTOMATION - Automations
  /api/v1/automation/{id}:
    delete:
      description: Deleta uma automação
      parameters:
      - description: Automation ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Automation deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid automation ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Automation not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete automation
      tags:
      - AUTOMATION - Automations
    get:
      description: Obtém detalhes de uma automação específica
      parameters:
      - description: Automation ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Automation details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid automation ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Automation not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get automation by ID
      tags:
      - AUTOMATION - Automations
    put:
      consumes:
      - application/json
      description: Atualiza uma automação existente
      parameters:
      - description: Automation ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Automation data
        in: body
        name: automation
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateAutomationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Automation updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Automation not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update automation
      tags:
      - AUTOMATION - Automations
  /api/v1/automation/actions:
    get:
      description: Lista todas as ações disponíveis para automações
      produces:
      - application/json
      responses:
        "200":
          description: Available actions
          schema:
            additionalProperties: true
            type: object
      summary: Get available actions
      tags:
      - AUTOMATION - Automations
  /api/v1/automation/broadcasts:
    get:
      consumes:
      - application/json
      description: Get a paginated list of broadcasts with optional filters
      parameters:
      - description: Filter by status (draft, scheduled, running, completed, failed,
          cancelled)
        in: query
        name: status
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 20, max: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'broadcasts: array of broadcasts, total: total count, page:
            current page, limit: items per page'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: List broadcasts
      tags:
      - AUTOMATION - Broadcasts
    post:
      consumes:
      - application/json
      description: Create a new broadcast for mass messaging
      parameters:
      - description: Broadcast details
        in: body
        name: broadcast
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateBroadcastRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'broadcast: created broadcast object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Create broadcast
      tags:
      - AUTOMATION - Broadcasts
  /api/v1/automation/broadcasts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a broadcast (only in draft or cancelled status)
      parameters:
      - description: Broadcast ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: success message'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: broadcast not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Delete broadcast
      tags:
      - AUTOMATION - Broadcasts
    get:
      consumes:
      - application/json
      description: Get a broadcast by ID
      parameters:
      - description: Broadcast ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'broadcast: broadcast object'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: broadcast not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Get broadcast
      tags:
      - AUTOMATION - Broadcasts
    put:
      consumes:
      - application/json
      description: Update a broadcast (only allowed in draft status)
      parameters:
      - description: Broadcast ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated broadcast details
        in: body
        name: broadcast
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateBroadcastRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'broadcast: updated broadcast object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: broadcast not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Update broadcast
      tags:
      - AUTOMATION - Broadcasts
  /api/v1/automation/broadcasts/{id}/cancel:
    post:
      consumes:
      - application/json
      description: Cancel a broadcast (if not completed)
      parameters:
      - description: Broadcast ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'broadcast: cancelled broadcast object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: broadcast not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Cancel broadcast
      tags:
      - AUTOMATION - Broadcasts
  /api/v1/automation/broadcasts/{id}/execute:
    post:
      consumes:
      - application/json
      description: Start executing a broadcast immediately
      parameters:
      - description: Broadcast ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'broadcast: executing broadcast object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: broadcast not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Execute broadcast
      tags:
      - AUTOMATION - Broadcasts
  /api/v1/automation/broadcasts/{id}/schedule:
    post:
      consumes:
      - application/json
      description: Schedule a broadcast for a specific date/time
      parameters:
      - description: Broadcast ID
        in: path
        name: id
        required: true
        type: string
      - description: Schedule details
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ScheduleBroadcastRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'broadcast: scheduled broadcast object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: broadcast not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Schedule broadcast
      tags:
      - AUTOMATION - Broadcasts
  /api/v1/automation/broadcasts/{id}/stats:
    get:
      consumes:
      - application/json
      description: Get statistics for a broadcast
      parameters:
      - description: Broadcast ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'stats: broadcast statistics object'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: broadcast not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Get broadcast stats
      tags:
      - AUTOMATION - Broadcasts
  /api/v1/automation/campaigns:
    get:
      consumes:
      - application/json
      description: Get a paginated list of campaigns with optional filters
      parameters:
      - description: Filter by status (draft, scheduled, active, paused, completed,
          archived)
        in: query
        name: status
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 20, max: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'campaigns: array of campaigns, total: total count, page: current
            page, limit: items per page'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: List campaigns
      tags:
      - AUTOMATION - Campaigns
    post:
      consumes:
      - application/json
      description: Create a new marketing campaign
      parameters:
      - description: Campaign details
        in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateCampaignRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'campaign: created campaign object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Create campaign
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/campaigns/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a campaign (only in draft status)
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: success message'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Delete campaign
      tags:
      - AUTOMATION - Campaigns
    get:
      consumes:
      - application/json
      description: Get a campaign by ID
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'campaign: campaign object'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Get campaign
      tags:
      - AUTOMATION - Campaigns
    put:
      consumes:
      - application/json
      description: Update a campaign (only allowed in draft status)
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated campaign details
        in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateCampaignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'campaign: updated campaign object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Update campaign
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/campaigns/{id}/activate:
    post:
      consumes:
      - application/json
      description: Activate a campaign to start execution
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'campaign: activated campaign object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Activate campaign
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/campaigns/{id}/archive:
    post:
      consumes:
      - application/json
      description: Archive a campaign
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'campaign: archived campaign object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Archive campaign
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/campaigns/{id}/complete:
    post:
      consumes:
      - application/json
      description: Mark a campaign as completed
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'campaign: completed campaign object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Complete campaign
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/campaigns/{id}/enroll:
    post:
      consumes:
      - application/json
      description: Enroll a contact in a campaign
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      - description: Enrollment details
        in: body
        name: enrollment
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.EnrollContactRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'enrollment: created enrollment object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Enroll contact
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/campaigns/{id}/enrollments:
    get:
      consumes:
      - application/json
      description: Get all enrollments for a campaign
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'enrollments: array of enrollments'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: List enrollments
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/campaigns/{id}/pause:
    post:
      consumes:
      - application/json
      description: Pause an active campaign
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'campaign: paused campaign object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Pause campaign
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/campaigns/{id}/resume:
    post:
      consumes:
      - application/json
      description: Resume a paused campaign
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'campaign: resumed campaign object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Resume campaign
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/campaigns/{id}/schedule:
    post:
      consumes:
      - application/json
      description: Schedule a campaign to start at a specific time
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      - description: Schedule details
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ScheduleCampaignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'campaign: scheduled campaign object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Schedule campaign
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/campaigns/{id}/stats:
    get:
      consumes:
      - application/json
      description: Get statistics for a campaign
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'stats: campaign statistics object'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: campaign not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Get campaign stats
      tags:
      - AUTOMATION - Campaigns
  /api/v1/automation/conditions/operators:
    get:
      description: Retorna todos os operadores disponíveis para condições (eq, gt,
        lt, contains, etc)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.ConditionOperatorResponse'
            type: array
      summary: Lista operadores de condição
      tags:
      - Automation
  /api/v1/automation/discovery:
    get:
      description: Retorna tipos, triggers, ações, operadores e lógica em uma única
        resposta
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.AutomationDiscoveryResponse'
      summary: Discovery completo de automação
      tags:
      - Automation
  /api/v1/automation/logic-operators:
    get:
      description: Retorna operadores lógicos disponíveis para combinar condições
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.LogicOperatorResponse'
            type: array
      summary: Lista operadores lógicos
      tags:
      - Automation
  /api/v1/automation/operators:
    get:
      description: Lista todos os operadores disponíveis para condições
      produces:
      - application/json
      responses:
        "200":
          description: Available operators
          schema:
            additionalProperties: true
            type: object
      summary: Get available operators
      tags:
      - AUTOMATION - Automations
  /api/v1/automation/sequences:
    get:
      consumes:
      - application/json
      description: Get a paginated list of sequences with optional filters
      parameters:
      - description: Filter by status (draft, active, paused, archived)
        in: query
        name: status
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 20, max: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'sequences: array of sequences, total: total count, page: current
            page, limit: items per page'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: List sequences
      tags:
      - AUTOMATION - Sequences
    post:
      consumes:
      - application/json
      description: Create a new automated sequence
      parameters:
      - description: Sequence details
        in: body
        name: sequence
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateSequenceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'sequence: created sequence object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Create sequence
      tags:
      - AUTOMATION - Sequences
  /api/v1/automation/sequences/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a sequence (only in draft status)
      parameters:
      - description: Sequence ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: success message'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: sequence not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Delete sequence
      tags:
      - AUTOMATION - Sequences
    get:
      consumes:
      - application/json
      description: Get a sequence by ID
      parameters:
      - description: Sequence ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'sequence: sequence object'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: sequence not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Get sequence
      tags:
      - AUTOMATION - Sequences
    put:
      consumes:
      - application/json
      description: Update a sequence (only allowed in draft status)
      parameters:
      - description: Sequence ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated sequence details
        in: body
        name: sequence
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateSequenceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'sequence: updated sequence object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: sequence not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Update sequence
      tags:
      - AUTOMATION - Sequences
  /api/v1/automation/sequences/{id}/activate:
    post:
      consumes:
      - application/json
      description: Activate a sequence to start accepting enrollments
      parameters:
      - description: Sequence ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'sequence: activated sequence object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: sequence not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Activate sequence
      tags:
      - AUTOMATION - Sequences
  /api/v1/automation/sequences/{id}/archive:
    post:
      consumes:
      - application/json
      description: Archive a sequence
      parameters:
      - description: Sequence ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'sequence: archived sequence object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: sequence not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Archive sequence
      tags:
      - AUTOMATION - Sequences
  /api/v1/automation/sequences/{id}/enroll:
    post:
      consumes:
      - application/json
      description: Enroll a contact in a sequence
      parameters:
      - description: Sequence ID
        in: path
        name: id
        required: true
        type: string
      - description: Enrollment details
        in: body
        name: enrollment
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.EnrollContactRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'enrollment: created enrollment object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: sequence not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Enroll contact
      tags:
      - AUTOMATION - Sequences
  /api/v1/automation/sequences/{id}/enrollments:
    get:
      consumes:
      - application/json
      description: Get all enrollments for a sequence
      parameters:
      - description: Sequence ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'enrollments: array of enrollments'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: sequence not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: List enrollments
      tags:
      - AUTOMATION - Sequences
  /api/v1/automation/sequences/{id}/pause:
    post:
      consumes:
      - application/json
      description: Pause an active sequence
      parameters:
      - description: Sequence ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'sequence: paused sequence object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: sequence not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Pause sequence
      tags:
      - AUTOMATION - Sequences
  /api/v1/automation/sequences/{id}/resume:
    post:
      consumes:
      - application/json
      description: Resume a paused sequence
      parameters:
      - description: Sequence ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'sequence: resumed sequence object'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: validation error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: sequence not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Resume sequence
      tags:
      - AUTOMATION - Sequences
  /api/v1/automation/sequences/{id}/stats:
    get:
      consumes:
      - application/json
      description: Get statistics for a sequence
      parameters:
      - description: Sequence ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'stats: sequence statistics object'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'error: sequence not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: internal server error message'
          schema:
            additionalProperties: true
            type: object
      summary: Get sequence stats
      tags:
      - AUTOMATION - Sequences
  /api/v1/automation/triggers:
    get:
      description: Retorna todos os triggers do sistema e customizados
      parameters:
      - description: Filtrar por categoria (session, message, pipeline, temporal,
          transaction, behavior)
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              custom_triggers:
                items:
                  $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.TriggerResponse'
                type: array
              system_triggers:
                items:
                  $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.TriggerResponse'
                type: array
            type: object
      summary: Lista triggers disponíveis
      tags:
      - Automation
  /api/v1/automation/triggers/{code}:
    get:
      description: Retorna metadados completos de um trigger incluindo parâmetros
        disponíveis
      parameters:
      - description: Código do trigger
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.TriggerResponse'
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Detalhes de um trigger
      tags:
      - Automation
  /api/v1/automation/triggers/custom:
    post:
      consumes:
      - application/json
      description: Permite que admins registrem triggers customizados com prefixo
        'custom.'
      parameters:
      - description: Metadados do trigger
        in: body
        name: trigger
        required: true
        schema:
          properties:
            code:
              type: string
            description:
              type: string
            name:
              type: string
            parameters:
              items:
                properties:
                  description:
                    type: string
                  name:
                    type: string
                  type:
                    type: string
                type: object
              type: array
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              message:
                type: string
              trigger:
                $ref: '#/definitions/github_com_ventros_crm_infrastructure_http_dto.TriggerResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Registrar trigger customizado
      tags:
      - Automation
  /api/v1/automation/triggers/custom/{code}:
    delete:
      description: Remove trigger customizado previamente registrado
      parameters:
      - description: Código do trigger customizado
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Remover trigger customizado
      tags:
      - Automation
  /api/v1/automation/types:
    get:
      description: Lista todos os tipos de automação disponíveis
      produces:
      - application/json
      responses:
        "200":
          description: Automation types
          schema:
            additionalProperties: true
            type: object
      summary: Get automation types
      tags:
      - AUTOMATION - Automations
  /api/v1/channels:
    get:
      description: List all channels for authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Channels list
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List channels
      tags:
      - CRM - Channels
    post:
      consumes:
      - application/json
      description: Create a new communication channel (WAHA, WhatsApp, etc.)
      parameters:
      - description: Channel data
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateChannelRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Channel created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Access denied
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create channel
      tags:
      - CRM - Channels
  /api/v1/channels/{channel_id}/sessions:
    get:
      description: Lista todas as sessões. Quando usado no endpoint global /sessions,
        requer contact_id ou channel_id
      parameters:
      - description: Filter by contact ID (UUID) - required for global endpoint
        in: query
        name: contact_id
        type: string
      - description: Filter by channel ID (UUID) - required for global endpoint
        in: query
        name: channel_id
        type: string
      - description: Filter by status (active, ended)
        in: query
        name: status
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of sessions
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List sessions
      tags:
      - CRM - Sessions
  /api/v1/channels/{id}:
    delete:
      description: Delete a communication channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Channel deleted
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete channel
      tags:
      - CRM - Channels
    get:
      description: Get details of a specific channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Channel details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel
      tags:
      - CRM - Channels
  /api/v1/channels/{id}/activate:
    post:
      description: Request channel activation (async processing via events)
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Activation requested (processing asynchronously)
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID or already active
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Activate channel
      tags:
      - CRM - Channels
  /api/v1/channels/{id}/activate-waha:
    post:
      consumes:
      - application/json
      description: Activate and initialize a WAHA session for a channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: WAHA channel activated
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request or not WAHA channel
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Activate WAHA channel
      tags:
      - CRM - Channels
  /api/v1/channels/{id}/configure-webhook:
    post:
      consumes:
      - application/json
      description: Automatically configure webhook in external channel (e.g. WAHA)
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      - description: Webhook configuration (optional, uses default if not provided)
        in: body
        name: request
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ConfigureWebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Webhook configured
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Configuration failed
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Configure channel webhook
      tags:
      - CRM - Channels
  /api/v1/channels/{id}/deactivate:
    post:
      description: Deactivate a communication channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Channel deactivated
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Deactivate channel
      tags:
      - CRM - Channels
  /api/v1/channels/{id}/import-history:
    post:
      consumes:
      - application/json
      description: Import message history from a WAHA channel (chats and messages)
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      - description: Import configuration (optional)
        in: body
        name: request
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ImportWAHAHistoryRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Import started (async)
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request or not WAHA channel
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Import WAHA message history
      tags:
      - CRM - Channels
  /api/v1/channels/{id}/import-status:
    get:
      description: Get the current status and progress of a WAHA history import
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Import status
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found or no import running
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get WAHA import status
      tags:
      - CRM - Channels
  /api/v1/channels/{id}/sessions/{session_id}:
    get:
      description: Obtém detalhes de uma sessão específica
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid session ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Session not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get session by ID
      tags:
      - CRM - Sessions
  /api/v1/channels/{id}/webhook-info:
    get:
      description: Return detailed information about channel webhook
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Webhook info
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel webhook info
      tags:
      - CRM - Channels
  /api/v1/channels/{id}/webhook-url:
    get:
      description: Return the webhook URL to be configured in external channel (WAHA,
        WhatsApp, etc)
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Webhook URL
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid channel ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel webhook URL
      tags:
      - CRM - Channels
  /api/v1/chats:
    get:
      consumes:
      - application/json
      description: List chats with optional filters (project_id, contact_id, status,
        chat_type)
      parameters:
      - description: Filter by project ID
        in: query
        name: project_id
        type: string
      - description: Filter by contact ID (participant)
        in: query
        name: contact_id
        type: string
      - description: Filter by status (active, archived, closed)
        in: query
        name: status
        type: string
      - description: Filter by chat type (individual, group, channel)
        in: query
        name: chat_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of chats
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List chats
      tags:
      - CRM - Chats
    post:
      consumes:
      - application/json
      description: Create a new chat (individual, group, or channel)
      parameters:
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      - description: Chat data
        in: body
        name: chat
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateChatRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Chat created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new chat
      tags:
      - CRM - Chats
  /api/v1/chats/{id}:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific chat
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Chat details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid chat ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Chat not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get chat by ID
      tags:
      - CRM - Chats
  /api/v1/chats/{id}/archive:
    post:
      consumes:
      - application/json
      description: Archive a chat (can be unarchived later)
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Chat archived successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid chat ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Chat not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Archive chat
      tags:
      - CRM - Chats
  /api/v1/chats/{id}/close:
    post:
      consumes:
      - application/json
      description: Permanently close a chat (cannot be reopened)
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Chat closed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid chat ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Chat not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Close chat
      tags:
      - CRM - Chats
  /api/v1/chats/{id}/participants:
    post:
      consumes:
      - application/json
      description: Add a contact or agent as a participant to a chat
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      - description: Participant data
        in: body
        name: participant
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.AddParticipantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Participant added successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Chat not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add participant to chat
      tags:
      - CRM - Chats
  /api/v1/chats/{id}/participants/{participant_id}:
    delete:
      consumes:
      - application/json
      description: Remove a participant from a chat
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      - description: Participant ID
        in: path
        name: participant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Participant removed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Chat or participant not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Remove participant from chat
      tags:
      - CRM - Chats
  /api/v1/chats/{id}/subject:
    patch:
      consumes:
      - application/json
      description: Update the subject/name of a group or channel chat
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      - description: New subject
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateSubjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Subject updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Chat not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update chat subject
      tags:
      - CRM - Chats
  /api/v1/chats/{id}/unarchive:
    post:
      consumes:
      - application/json
      description: Unarchive a chat (reactivate it)
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Chat unarchived successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid chat ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Chat not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Unarchive chat
      tags:
      - CRM - Chats
  /api/v1/contacts:
    get:
      consumes:
      - application/json
      description: List all contacts with optional filters (authenticated user only)
      parameters:
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of contacts
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Project not owned by user
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List contacts
      tags:
      - CRM - Contacts
    post:
      consumes:
      - application/json
      description: Create a new contact in the system
      parameters:
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      - description: Contact data
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateContactRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Contact created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new contact
      tags:
      - CRM - Contacts
  /api/v1/contacts/{contact_id}/domain-events:
    get:
      description: Lista todos os eventos de domínio disparados para um contato
      parameters:
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List domain events by contact
      tags:
      - domain-events
  /api/v1/contacts/{contact_id}/events:
    get:
      description: List contact events with filtering and pagination
      parameters:
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: string
      - description: Filter by categories (comma-separated)
        in: query
        name: categories
        type: string
      - description: Filter by priority
        in: query
        name: priority
        type: string
      - description: 'Limit (default: 50, max: 200)'
        in: query
        name: limit
        type: integer
      - description: 'Offset (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List contact events
      tags:
      - contact-events
  /api/v1/contacts/{contact_id}/events/stream:
    get:
      description: Stream contact events in real-time using Server-Sent Events (SSE).
        Requires authentication.
      parameters:
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: string
      - description: 'Filter by categories (comma-separated): status,pipeline,assignment,tag,note,session,custom_field,system,notification'
        in: query
        name: categories
        type: string
      - description: 'Filter by priority: low,normal,high,urgent'
        in: query
        name: priority
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Event stream
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - no access to this contact
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Stream contact events
      tags:
      - contact-events
  /api/v1/contacts/{contact_id}/events/stream/{category}:
    get:
      description: Stream contact events filtered by specific category
      parameters:
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: string
      - description: 'Category: status,pipeline,assignment,tag,note,session,custom_field,system,notification'
        in: path
        name: category
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Event stream
          schema:
            type: string
      summary: Stream contact events by category
      tags:
      - contact-events
  /api/v1/contacts/{contact_id}/sessions:
    get:
      description: Lista todas as sessões. Quando usado no endpoint global /sessions,
        requer contact_id ou channel_id
      parameters:
      - description: Filter by contact ID (UUID) - required for global endpoint
        in: query
        name: contact_id
        type: string
      - description: Filter by channel ID (UUID) - required for global endpoint
        in: query
        name: channel_id
        type: string
      - description: Filter by status (active, ended)
        in: query
        name: status
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of sessions
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List sessions
      tags:
      - CRM - Sessions
  /api/v1/contacts/{contact_id}/trackings:
    get:
      description: Retorna todos os trackings de um contato específico
      parameters:
      - description: ID do contato
        in: path
        name: contact_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_ventros_crm_internal_application_tracking.TrackingDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - BearerAuth: []
      summary: Busca trackings de um contato
      tags:
      - CRM - Tracking
  /api/v1/contacts/{id}:
    delete:
      description: Remove um contato (soft delete)
      parameters:
      - description: Contact ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Contact deleted successfully
        "400":
          description: Invalid contact ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Contact not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete contact
      tags:
      - CRM - Contacts
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific contact
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contact details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid contact ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Contact not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get contact by ID
      tags:
      - CRM - Contacts
    put:
      consumes:
      - application/json
      description: Atualiza um contato existente
      parameters:
      - description: Contact ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Contact update data
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateContactRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Contact updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Contact not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update contact
      tags:
      - CRM - Contacts
  /api/v1/contacts/{id}/pipelines/{pipeline_id}/status:
    put:
      consumes:
      - application/json
      description: Change contact status in a specific pipeline
      parameters:
      - description: Contact ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Pipeline ID (UUID)
        in: path
        name: pipeline_id
        required: true
        type: string
      - description: Status change request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ChangePipelineStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Status changed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Contact or pipeline not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Change contact pipeline status
      tags:
      - CRM - Contacts
  /api/v1/contacts/{id}/sessions/{session_id}:
    get:
      description: Obtém detalhes de uma sessão específica
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid session ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Session not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get session by ID
      tags:
      - CRM - Sessions
  /api/v1/contacts/advanced:
    get:
      consumes:
      - application/json
      description: List contacts with advanced filters (name, phone, email, tags,
        dates), pagination, and sorting
      parameters:
      - description: Filter by name (partial match)
        in: query
        name: name
        type: string
      - description: Filter by phone (partial match)
        in: query
        name: phone
        type: string
      - description: Filter by email (partial match)
        in: query
        name: email
        type: string
      - collectionFormat: csv
        description: Filter by tags (comma-separated)
        in: query
        items:
          type: string
        name: tags
        type: array
      - description: Filter by created_after (YYYY-MM-DD)
        in: query
        name: created_after
        type: string
      - description: Filter by created_before (YYYY-MM-DD)
        in: query
        name: created_before
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: limit
        type: integer
      - default: created_at
        description: Sort by field
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        in: query
        name: sort_dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of contacts with pagination
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List contacts with advanced filters
      tags:
      - CRM - Contacts
  /api/v1/contacts/search:
    get:
      consumes:
      - application/json
      description: Full-text search on contact name, phone, and email with relevance
        scoring
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - default: 20
        description: Result limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Search results with match scores
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search contacts
      tags:
      - CRM - Contacts
  /api/v1/crm/agents/{id}/virtual/end-period:
    put:
      consumes:
      - application/json
      description: |-
        Marks the end date for the period that a virtual agent represents. Useful when a phone number is transferred to a different person.

        **Use Case:**
        When a WhatsApp number changes ownership, you can:
        1. End the period for the old virtual agent (this endpoint)
        2. Create a new virtual agent for the new owner
        3. Maintain clean historical segmentation in analytics
      parameters:
      - description: Virtual agent ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Period end date
        in: body
        name: period
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.EndVirtualAgentPeriodRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Period ended successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request or agent is not virtual
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Agent not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: End virtual agent period
      tags:
      - CRM - Agents
  /api/v1/crm/agents/advanced:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve all agents (AI agents and human support staff) with comprehensive filtering capabilities. Agents handle customer conversations either autonomously (AI) or manually (human). Essential for team management, capacity planning, and performance monitoring.

        **Filtering Capabilities:**
        - Filter by project_id to view agents assigned to specific business units
        - Filter by type to distinguish AI agents from human agents
        - Filter by status (online, offline, busy) for real-time availability tracking
        - Filter by active status to show/hide deactivated agents

        **Common Use Cases:**
        - Load all active agents for the team dashboard
        - Build agent selector dropdowns for manual conversation assignment
        - Monitor real-time agent availability and capacity
        - Track agent performance and productivity metrics
        - Identify offline or busy agents for workload balancing
        - Generate agent reports by project or department
        - Audit agent configurations and permissions

        **Sorting Options:**
        - Sort by name (alphabetical order)
        - Sort by created_at (onboarding order)
        - Ascending or descending order

        **Performance:**
        - Optimized GORM indexes on tenant+type for fast agent type queries
        - Composite indexes on tenant+status for real-time availability checks
        - Small result sets (typically < 200 agents per tenant) for instant responses
      parameters:
      - description: 'Filter by project UUID - Example: 550e8400-e29b-41d4-a716-446655440000'
        in: query
        name: project_id
        type: string
      - description: Filter by agent type
        enum:
        - ai
        - human
        example: human
        in: query
        name: type
        type: string
      - description: Filter by availability status
        enum:
        - online
        - offline
        - busy
        example: online
        in: query
        name: status
        type: string
      - description: 'Filter by active status - true: only active, false: only inactive'
        example: true
        in: query
        name: active
        type: boolean
      - default: 1
        description: Page number for pagination (starts at 1)
        example: 1
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 20
        description: Results per page (max 100)
        example: 20
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: created_at
        description: Field to sort by
        enum:
        - name
        - created_at
        example: name
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        example: asc
        in: query
        name: sort_dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved agents with full details
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.ListAgentsResponse'
        "400":
          description: Bad Request - Invalid UUID or parameter format
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Authentication required
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - No access to this tenant's agents
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List agents with advanced filters and pagination
      tags:
      - CRM - Agents
  /api/v1/crm/agents/search:
    get:
      consumes:
      - application/json
      description: |-
        Full-text search across agent names and email addresses. Perfect for quickly finding specific team members in organizations with many agents.

        **Search Capabilities:**
        - Searches agent names (primary field)
        - Searches agent email addresses (secondary field)
        - Case-insensitive ILIKE matching

        **Match Scoring:**
        - Name matches: 1.5 score (higher priority)
        - Email matches: 1.2 score (lower priority)

        **Search Examples:**
        - "João" - Find agents named João
        - "support" - Find support team members
        - "@gmail.com" - Find agents with Gmail addresses
        - "sales" - Find sales team agents
      parameters:
      - description: Search query - name or email
        example: João Silva
        in: query
        minLength: 1
        name: q
        required: true
        type: string
      - default: 20
        description: Maximum results (max 100)
        example: 10
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Found agents with match scores
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.SearchAgentsResponse'
        "400":
          description: Bad Request - Empty search query
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Search agents by name and email
      tags:
      - CRM - Agents
  /api/v1/crm/agents/virtual:
    post:
      consumes:
      - application/json
      description: |-
        Creates a virtual agent to represent a person from the past. Virtual agents cannot send messages or be manually assigned - they exist only for metrics segmentation and historical tracking.

        **Use Cases:**
        - Attribute old messages from external systems (device attribution)
        - Track historical contacts when phone numbers change hands
        - Segment metrics by time periods and historical users
        - Maintain conversation history without granting system access

        **Virtual Agent Restrictions:**
        - Cannot send messages
        - Cannot be manually assigned to conversations
        - Do not count in agent performance metrics
        - Always appear as offline
        - Name is prefixed with "[Virtual]"
      parameters:
      - description: Virtual agent data
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateVirtualAgentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Virtual agent created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create virtual agent
      tags:
      - CRM - Agents
  /api/v1/crm/messages/advanced:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve a paginated list of messages with comprehensive filtering across contact, session, channel, direction, content type, and delivery status. Ideal for building message history views, conversation analytics, and customer interaction tracking.

        **Filtering Capabilities:**
        - Filter by contact to view all messages for a specific customer
        - Filter by session to see complete conversation threads
        - Filter by channel to analyze messages from specific communication channels (WhatsApp, Email, etc)
        - Filter by project to segment messages by business unit or department
        - Filter by channel_type (1=WhatsApp, 2=Email, 3=SMS, etc) for channel-specific analytics
        - Filter by from_me (true=outbound agent messages, false=inbound customer messages)
        - Filter by content_type (text, image, video, audio, document, location, contact, sticker) for media analysis
        - Filter by status (pending, sent, delivered, read, failed) for delivery tracking
        - Filter by agent_id to track individual agent performance
        - Filter by timestamp range to analyze time-based patterns
        - Filter by has_media flag to find messages with attachments

        **Use Cases:**
        - Build conversation history UIs with infinite scroll pagination
        - Analyze customer response times and patterns
        - Track message delivery rates across channels
        - Monitor agent productivity and response quality
        - Generate conversation transcripts for compliance
        - Identify media-rich conversations for quality assurance

        **Sorting Options:**
        - Sort by timestamp (default), created_at for processing order
        - Ascending or descending order

        **Performance:**
        - Optimized with composite GORM indexes on tenant+session, tenant+contact, tenant+channel
        - GIN index on JSONB metadata field for custom attribute searches
        - Maximum 100 messages per page for optimal response times
        - Efficiently handles millions of messages per tenant
      parameters:
      - description: 'Filter by contact UUID - Example: 550e8400-e29b-41d4-a716-446655440000'
        in: query
        name: contact_id
        type: string
      - description: 'Filter by session UUID to get full conversation - Example: 660e8400-e29b-41d4-a716-446655440001'
        in: query
        name: session_id
        type: string
      - description: Filter by channel UUID (specific WhatsApp number, email account,
          etc)
        in: query
        name: channel_id
        type: string
      - description: Filter by project UUID to segment by business unit
        in: query
        name: project_id
        type: string
      - description: Filter by channel type - 1:WhatsApp, 2:Email, 3:SMS, 4:Web Chat
        example: 1
        in: query
        name: channel_type_id
        type: integer
      - description: 'Filter by direction - true: agent sent, false: customer sent'
        example: false
        in: query
        name: from_me
        type: boolean
      - description: Filter by content type
        enum:
        - text
        - image
        - video
        - audio
        - document
        - location
        - contact
        - sticker
        example: text
        in: query
        name: content_type
        type: string
      - description: Filter by delivery status
        enum:
        - pending
        - sent
        - delivered
        - read
        - failed
        example: delivered
        in: query
        name: status
        type: string
      - description: Filter by agent UUID for performance tracking
        in: query
        name: agent_id
        type: string
      - description: 'Messages sent after this timestamp - Format: 2006-01-02T15:04:05Z'
        example: "2024-01-01T00:00:00Z"
        in: query
        name: timestamp_after
        type: string
      - description: Messages sent before this timestamp
        example: "2024-12-31T23:59:59Z"
        in: query
        name: timestamp_before
        type: string
      - description: 'Filter messages with media attachments - true: only with media'
        example: true
        in: query
        name: has_media
        type: boolean
      - default: 1
        description: Page number for pagination (starts at 1)
        example: 1
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 20
        description: Messages per page (max 100)
        example: 50
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: timestamp
        description: Field to sort by
        enum:
        - timestamp
        - created_at
        example: timestamp
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        example: desc
        in: query
        name: sort_dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved messages with pagination and filter
            metadata
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.ListMessagesResponse'
        "400":
          description: Bad Request - Invalid UUID format, invalid enum values, or
            limit exceeds 100
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Missing or invalid authentication token
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - User lacks permission to access this tenant's messages
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error - Database errors or query execution
            failures
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List messages with advanced filters and pagination
      tags:
      - CRM - Messages
  /api/v1/crm/messages/search:
    get:
      consumes:
      - application/json
      description: |-
        Perform intelligent full-text search across message text content using PostgreSQL ILIKE pattern matching. Perfect for finding specific conversations, keywords, customer questions, or agent responses within your entire message history.

        **Search Capabilities:**
        - Searches through message text content (case-insensitive)
        - Supports partial word matches (e.g., "refund" matches "refunds", "refunded")
        - Works across all message types (customer and agent messages)
        - Searches only text content (media URLs are not searched)

        **Match Scoring & Relevance:**
        - All matches receive a score of 1.0 (simple ILIKE search, no complex scoring)
        - Results ordered by timestamp (newest first) for relevance
        - Match field always returns "text" since only text content is searched

        **Common Use Cases:**
        - Find all conversations mentioning "refund" or "cancellation"
        - Search for product names across customer inquiries
        - Locate conversations with specific error codes or reference numbers
        - Find messages containing customer phone numbers or emails
        - Search for competitor mentions in customer conversations
        - Identify conversations with specific keywords for quality assurance
        - Compliance searches for regulated terms or phrases

        **Search Examples:**
        - "order #12345" - Find messages mentioning specific order numbers
        - "password reset" - Find password-related support conversations
        - "urgent" or "emergency" - Identify high-priority conversations
        - "@email.com" - Find messages containing email addresses
        - "bug" or "error" - Locate technical issue reports

        **Performance:**
        - Optimized GORM indexes on tenant_id for fast tenant isolation
        - ILIKE operator uses PostgreSQL's text search capabilities
        - Maximum 100 results to ensure sub-second response times
        - Handles searches across millions of messages efficiently
      parameters:
      - description: 'Search query - minimum 1 character, case-insensitive, supports
          partial matches - Examples: ''refund'', ''order #12345'', ''password reset'',
          ''urgent'''
        example: refund request
        in: query
        minLength: 1
        name: q
        required: true
        type: string
      - default: 20
        description: Maximum number of results (max 100)
        example: 20
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully found matching messages with text excerpts and
            context
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.SearchMessagesResponse'
        "400":
          description: Bad Request - Missing or empty search query, or limit exceeds
            100
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Missing or invalid authentication token
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - User lacks permission to search this tenant's messages
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error - Database connection errors or search
            execution failures
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Full-text search across message content
      tags:
      - CRM - Messages
  /api/v1/crm/notes/advanced:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve all notes with comprehensive filtering capabilities. Notes are annotations, comments, and action items added by agents, automation, or the system during customer interactions. Essential for maintaining conversation context, tracking follow-ups, and audit trails.

        **Filtering Capabilities:**
        - Filter by contact_id to view all notes for a specific customer
        - Filter by session_id to see notes from a particular conversation
        - Filter by author_id to track notes from specific agents or automation rules
        - Filter by author_type (agent, system, automation) to distinguish note sources
        - Filter by note_type (comment, action, follow-up, escalation, resolution) to organize by purpose
        - Filter by priority (low, medium, high, urgent) for task management
        - Filter by visible_to_client flag to separate internal vs customer-facing notes
        - Filter by pinned flag to identify important or starred notes

        **Common Use Cases:**
        - Build contact history timelines with all interactions and annotations
        - Generate session summaries with agent notes and context
        - Track agent activity and note-taking patterns
        - Manage follow-up tasks and action items
        - Identify escalated issues requiring attention
        - Create customer-facing summaries (visible_to_client=true)
        - Audit trail for compliance and quality assurance
        - Filter high-priority notes for urgent follow-ups

        **Sorting Options:**
        - Sort by created_at (chronological order)
        - Sort by priority (task prioritization)
        - Ascending or descending order

        **Performance:**
        - Optimized GORM indexes on tenant+contact for fast contact note queries
        - Composite indexes on tenant+session for session note retrieval
        - Indexes on tenant+author for agent activity tracking
        - Efficiently handles large note volumes per contact
      parameters:
      - description: 'Filter by contact UUID - Example: 550e8400-e29b-41d4-a716-446655440000'
        in: query
        name: contact_id
        type: string
      - description: 'Filter by session UUID - Example: 660e8400-e29b-41d4-a716-446655440001'
        in: query
        name: session_id
        type: string
      - description: Filter by author (agent/automation) UUID
        in: query
        name: author_id
        type: string
      - description: Filter by author type
        enum:
        - agent
        - system
        - automation
        example: agent
        in: query
        name: author_type
        type: string
      - description: Filter by note purpose
        enum:
        - comment
        - action
        - follow-up
        - escalation
        - resolution
        example: follow-up
        in: query
        name: note_type
        type: string
      - description: Filter by priority level
        enum:
        - low
        - medium
        - high
        - urgent
        example: high
        in: query
        name: priority
        type: string
      - description: 'Filter by client visibility - true: customer-facing notes only'
        example: false
        in: query
        name: visible_to_client
        type: boolean
      - description: 'Filter by pinned status - true: important/starred notes only'
        example: true
        in: query
        name: pinned
        type: boolean
      - default: 1
        description: Page number for pagination (starts at 1)
        example: 1
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 20
        description: Results per page (max 100)
        example: 20
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: created_at
        description: Field to sort by
        enum:
        - created_at
        - priority
        example: created_at
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        example: desc
        in: query
        name: sort_dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved notes with full details
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.ListNotesResponse'
        "400":
          description: Bad Request - Invalid UUID or parameter format
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Authentication required
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - No access to this tenant's notes
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List notes with advanced filters and pagination
      tags:
      - CRM - Notes
  /api/v1/crm/notes/search:
    get:
      consumes:
      - application/json
      description: |-
        Full-text search across note content and author names. Perfect for finding specific annotations, comments, or action items across all customer interactions and conversations.

        **Search Capabilities:**
        - Searches note content/body (primary field)
        - Searches author names (secondary field)
        - Case-insensitive ILIKE matching

        **Match Scoring:**
        - Content matches: 1.5 score (higher priority)
        - Author name matches: 1.2 score (lower priority)

        **Search Examples:**
        - "follow-up required" - Find notes about pending follow-ups
        - "escalated to manager" - Locate escalation notes
        - "pricing question" - Find pricing-related annotations
        - "technical issue" - Search for technical problem notes
        - "João" - Find notes written by agent João
        - "urgent" - Locate urgent action items

        **Performance:**
        - Optimized GORM indexes on tenant_id for fast tenant isolation
        - ILIKE operator uses PostgreSQL's text search capabilities
        - Maximum 100 results to ensure sub-second response times
      parameters:
      - description: Search query - content or author name
        example: follow-up required
        in: query
        minLength: 1
        name: q
        required: true
        type: string
      - default: 20
        description: Maximum results (max 100)
        example: 10
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Found notes with match scores
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.SearchNotesResponse'
        "400":
          description: Bad Request - Empty search query
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Search notes by content and author
      tags:
      - CRM - Notes
  /api/v1/crm/pipelines/{id}/custom-fields:
    get:
      description: Retrieve all custom fields for a pipeline
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of custom fields
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid pipeline ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Pipeline not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get pipeline custom fields
      tags:
      - CRM - Pipelines
    post:
      consumes:
      - application/json
      description: Set or update a custom field value for a pipeline
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Custom field data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.SetCustomFieldRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Custom field set successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Pipeline not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Set pipeline custom field
      tags:
      - CRM - Pipelines
  /api/v1/crm/pipelines/{id}/custom-fields/{key}:
    delete:
      description: Remove a custom field from a pipeline by key
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Custom field key
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Custom field removed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Pipeline or custom field not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Remove pipeline custom field
      tags:
      - CRM - Pipelines
  /api/v1/crm/pipelines/advanced:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve all pipelines with filtering by project, active status, and color. Pipelines organize contacts into workflow stages with customizable statuses. Essential for sales processes, support tickets, and multi-stage customer journeys.

        **Filtering Capabilities:**
        - Filter by project_id to get pipelines for a specific business unit
        - Filter by active status to show/hide archived pipelines
        - Filter by color for UI organization and visual pipeline management

        **Common Use Cases:**
        - Load all active pipelines for a project's dashboard
        - Build pipeline selector dropdowns for contact assignment
        - Audit pipeline configuration across projects
        - Identify inactive pipelines for cleanup
        - Generate pipeline reports by color-coded categories

        **Performance:**
        - Optimized GORM indexes on tenant+active for fast active pipeline queries
        - Small result sets (typically < 50 pipelines per tenant) for instant responses
      parameters:
      - description: Filter by project UUID
        example: 550e8400-e29b-41d4-a716-446655440000
        in: query
        name: project_id
        type: string
      - description: 'Filter by active status - true: only active, false: only inactive'
        example: true
        in: query
        name: active
        type: boolean
      - description: 'Filter by hex color code - Example: #FF5733, #3B82F6'
        example: '#3B82F6'
        in: query
        name: color
        type: string
      - default: 1
        description: Page number (starts at 1)
        example: 1
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 20
        description: Results per page (max 100)
        example: 20
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: created_at
        description: Sort field
        enum:
        - name
        - position
        - created_at
        example: position
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        example: asc
        in: query
        name: sort_dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved pipelines with full configuration details
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.ListPipelinesResponse'
        "400":
          description: Bad Request - Invalid UUID or parameter format
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Authentication required
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - No access to this tenant's pipelines
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List pipelines with advanced filters
      tags:
      - CRM - Pipelines
  /api/v1/crm/pipelines/search:
    get:
      consumes:
      - application/json
      description: |-
        Full-text search across pipeline names and descriptions. Perfect for finding specific pipelines in large organizations with many workflow configurations.

        **Search Capabilities:**
        - Searches pipeline names (primary field)
        - Searches pipeline descriptions (secondary field)
        - Case-insensitive ILIKE matching

        **Match Scoring:**
        - Name matches: 1.5 score (higher priority)
        - Description matches: 1.2 score (lower priority)

        **Search Examples:**
        - "sales" - Find all sales-related pipelines
        - "support" - Find customer support workflows
        - "onboarding" - Locate onboarding process pipelines
      parameters:
      - description: Search query - name or description
        example: sales pipeline
        in: query
        minLength: 1
        name: q
        required: true
        type: string
      - default: 20
        description: Maximum results (max 100)
        example: 10
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Found pipelines with match scores
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.SearchPipelinesResponse'
        "400":
          description: Bad Request - Empty search query
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Search pipelines by name and description
      tags:
      - CRM - Pipelines
  /api/v1/crm/projects/advanced:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve all projects with filtering by customer and active status. Projects serve as organizational containers that group channels, pipelines, and contacts into business units or departments. Essential for multi-brand organizations and enterprise segmentation.

        **Filtering Capabilities:**
        - Filter by customer_id to view all projects for a specific customer account
        - Filter by active status to show/hide archived projects

        **Common Use Cases:**
        - Load all active projects for the main dashboard
        - Build project selector dropdowns for channel/pipeline assignment
        - View complete project portfolio for a specific customer
        - Audit project configurations across the organization
        - Identify inactive projects for cleanup and archival
        - Generate project reports and analytics by customer

        **Sorting Options:**
        - Sort by name (alphabetical organization)
        - Sort by created_at (chronological order)
        - Ascending or descending order

        **Performance:**
        - Optimized GORM indexes on tenant+customer for fast customer project queries
        - Composite indexes on tenant+active for quick active project retrieval
        - Small result sets (typically < 100 projects per tenant) for instant responses
      parameters:
      - description: 'Filter by customer UUID - Example: 550e8400-e29b-41d4-a716-446655440000'
        in: query
        name: customer_id
        type: string
      - description: 'Filter by active status - true: only active, false: only inactive'
        example: true
        in: query
        name: active
        type: boolean
      - default: 1
        description: Page number for pagination (starts at 1)
        example: 1
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 20
        description: Results per page (max 100)
        example: 20
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: created_at
        description: Field to sort by
        enum:
        - name
        - created_at
        example: name
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        example: asc
        in: query
        name: sort_dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved projects with full details
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.ListProjectsResponse'
        "400":
          description: Bad Request - Invalid UUID or parameter format
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Authentication required
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - No access to this tenant's projects
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List projects with advanced filters and pagination
      tags:
      - CRM - Projects
  /api/v1/crm/projects/search:
    get:
      consumes:
      - application/json
      description: |-
        Full-text search across project names and descriptions. Perfect for finding specific business units or departments in organizations with many projects.

        **Search Capabilities:**
        - Searches project names (primary field)
        - Searches project descriptions (secondary field)
        - Case-insensitive ILIKE matching

        **Match Scoring:**
        - Name matches: 1.5 score (higher priority)
        - Description matches: 1.2 score (lower priority)

        **Search Examples:**
        - "sales" - Find all sales-related projects
        - "support" - Find customer support departments
        - "Q1 2024" - Locate quarterly projects
        - "EMEA" - Find regional projects
      parameters:
      - description: Search query - name or description
        example: sales project
        in: query
        minLength: 1
        name: q
        required: true
        type: string
      - default: 20
        description: Maximum results (max 100)
        example: 10
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Found projects with match scores
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.SearchProjectsResponse'
        "400":
          description: Bad Request - Empty search query
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Search projects by name and description
      tags:
      - CRM - Projects
  /api/v1/crm/sessions/advanced:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve a paginated list of sessions with advanced filtering capabilities including contact, pipeline, status, sentiment, and resolution flags. Supports sorting and pagination for efficient data retrieval. Perfect for building session dashboards and reports.

        **Filtering Options:**
        - Filter by contact to see all sessions for a specific customer
        - Filter by pipeline to analyze sessions in a specific workflow
        - Filter by status (active/ended) to focus on ongoing or completed sessions
        - Filter by sentiment (positive/negative/neutral) for customer satisfaction analysis
        - Filter by resolved/escalated/converted flags for outcome tracking
        - Filter by date range to analyze sessions within specific time periods
        - Filter by message count range to find short or long conversations

        **Sorting Options:**
        - Sort by started_at, ended_at, message_count, or duration
        - Ascending or descending order

        **Performance:**
        - Optimized with composite GORM indexes on tenant+status, tenant+contact, tenant+pipeline
        - GIN indexes on JSONB fields (agent_ids, topics, outcome_tags) for fast array searches
        - Pagination prevents large result sets
        - Maximum 100 results per page
      parameters:
      - description: 'Filter by contact UUID - Example: 550e8400-e29b-41d4-a716-446655440000'
        in: query
        name: contact_id
        type: string
      - description: 'Filter by pipeline UUID - Example: 660e8400-e29b-41d4-a716-446655440001'
        in: query
        name: pipeline_id
        type: string
      - description: Filter by session status
        enum:
        - active
        - ended
        example: active
        in: query
        name: status
        type: string
      - description: Filter by detected sentiment
        enum:
        - positive
        - negative
        - neutral
        example: positive
        in: query
        name: sentiment
        type: string
      - description: 'Filter by resolved flag - true: only resolved sessions, false:
          only unresolved'
        example: true
        in: query
        name: resolved
        type: boolean
      - description: 'Filter by escalated flag - true: only escalated sessions'
        example: false
        in: query
        name: escalated
        type: boolean
      - description: 'Filter by converted flag - true: sessions that led to conversions'
        example: true
        in: query
        name: converted
        type: boolean
      - description: 'Filter sessions started after this timestamp - Format: 2006-01-02T15:04:05Z'
        example: "2024-01-01T00:00:00Z"
        in: query
        name: started_after
        type: string
      - description: Filter sessions started before this timestamp
        example: "2024-12-31T23:59:59Z"
        in: query
        name: started_before
        type: string
      - description: 'Minimum number of messages in session - Example: 5'
        example: 5
        in: query
        name: min_messages
        type: integer
      - description: 'Maximum number of messages in session - Example: 100'
        example: 100
        in: query
        name: max_messages
        type: integer
      - default: 1
        description: Page number for pagination (starts at 1)
        example: 1
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 20
        description: Number of results per page (max 100)
        example: 20
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: started_at
        description: Field to sort by
        enum:
        - started_at
        - ended_at
        - message_count
        - duration_seconds
        - created_at
        example: started_at
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        example: desc
        in: query
        name: sort_dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved sessions with pagination metadata
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.ListSessionsResponse'
        "400":
          description: Bad Request - Invalid parameters (e.g., invalid UUID format,
            invalid page number, limit exceeds maximum)
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Missing or invalid authentication token
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - User doesn't have permission to access this tenant's
            sessions
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error - Database connection issues or unexpected
            errors
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List sessions with advanced filters and pagination
      tags:
      - CRM - Sessions
  /api/v1/crm/sessions/search:
    get:
      consumes:
      - application/json
      description: |-
        Perform intelligent full-text search across session summaries, topics, key entities, next steps, and outcome tags. Uses PostgreSQL ILIKE for case-insensitive pattern matching with relevance scoring.

        **Search Capabilities:**
        - Searches across session summary text (AI-generated conversation summaries)
        - Searches through detected topics (array of conversation topics)
        - Searches through outcome tags (categorization tags added at session end)
        - Searches through key entities (people, products, companies mentioned)
        - Searches through next steps (action items identified in conversation)

        **Match Scoring:**
        - Summary matches: 2.0 score (highest priority - main content)
        - Topics matches: 1.5 score (high priority - categorization)
        - Outcome tags matches: 1.3 score (medium priority - resolution info)
        - Key entities/next steps matches: 1.0 score (standard priority)

        **Search Examples:**
        - Search for "refund" to find all sessions where refunds were discussed
        - Search for "escalated" to find problematic sessions
        - Search for "product-demo" to find sessions with demo requests
        - Search for customer/company names mentioned in conversations

        **Performance:**
        - Optimized with GIN indexes on JSONB fields (topics, outcome_tags, key_entities)
        - Results ordered by match score (highest relevance first)
        - Maximum 100 results to ensure fast response times
      parameters:
      - description: 'Search query - minimum 1 character, case-insensitive - Example:
          ''refund request'' or ''product-demo'' or ''escalated'''
        example: refund request
        in: query
        minLength: 1
        name: q
        required: true
        type: string
      - default: 20
        description: Maximum number of results to return (max 100)
        example: 20
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully found matching sessions with relevance scores
            and matched fields
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_queries.SearchSessionsResponse'
        "400":
          description: Bad Request - Missing or invalid search query, limit exceeds
            maximum
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Missing or invalid authentication token
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - User doesn't have permission to search this tenant's
            sessions
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error - Database connection issues or search
            execution errors
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Full-text search across sessions
      tags:
      - CRM - Sessions
  /api/v1/domain-events:
    get:
      description: Lista todos os eventos de domínio disparados em um projeto
      parameters:
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      - description: 'Limit (default: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List domain events by project
      tags:
      - domain-events
  /api/v1/domain-events/by-type:
    get:
      description: Lista eventos de domínio filtrados por tipo
      parameters:
      - description: Event Type (e.g., contact.created, session.started)
        in: query
        name: event_type
        required: true
        type: string
      - description: 'Limit (default: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List domain events by type
      tags:
      - domain-events
  /api/v1/media/upload:
    post:
      consumes:
      - multipart/form-data
      description: Faz upload de um arquivo de mídia (imagem, vídeo, áudio, documento)
        para uso em mensagens
      parameters:
      - description: Media file to upload (max 64MB)
        in: formData
        name: file
        required: true
        type: file
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.UploadResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "413":
          description: File too large
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Upload failed
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Upload media file
      tags:
      - media
  /api/v1/messages:
    get:
      description: List messages with optional filters
      parameters:
      - description: Filter by session ID (UUID)
        in: query
        name: session_id
        type: string
      - description: Filter by contact ID (UUID)
        in: query
        name: contact_id
        type: string
      - description: Filter by direction (inbound, outbound)
        in: query
        name: direction
        type: string
      - description: Filter by message type
        in: query
        name: message_type
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of messages
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List messages
      tags:
      - CRM - Messages
    post:
      consumes:
      - application/json
      description: Create a new message
      parameters:
      - description: Message data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateMessageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Message created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create message
      tags:
      - CRM - Messages
  /api/v1/messages/{id}:
    delete:
      description: Remove a message (soft delete)
      parameters:
      - description: Message ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Message deleted successfully
        "400":
          description: Invalid message ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Message not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete message
      tags:
      - CRM - Messages
    get:
      description: Get details of a specific message
      parameters:
      - description: Message ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid message ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Message not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get message by ID
      tags:
      - CRM - Messages
    put:
      consumes:
      - application/json
      description: Update an existing message
      parameters:
      - description: Message ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Message update data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Message updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Message not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update message
      tags:
      - CRM - Messages
  /api/v1/messages/confirm-delivery:
    post:
      consumes:
      - application/json
      description: Confirm delivery, reading or failure of a sent message
      parameters:
      - description: Delivery confirmation data
        in: body
        name: confirmation
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ConfirmMessageDeliveryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Message status updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Message not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Confirm message delivery
      tags:
      - CRM - Messages
  /api/v1/messages/send:
    post:
      consumes:
      - application/json
      description: Send a message to a contact via specific channel
      parameters:
      - description: Message data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.SendMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Message sent successfully
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.SendMessageResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Send message
      tags:
      - CRM - Messages
  /api/v1/pipelines:
    get:
      description: Lista todos os pipelines de um projeto (apenas do usuário autenticado)
      parameters:
      - description: Project ID (UUID)
        in: query
        name: project_id
        required: true
        type: string
      - description: Filter by active status
        in: query
        name: active
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of pipelines
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Project not owned by user
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List pipelines
      tags:
      - CRM - Pipelines
    post:
      consumes:
      - application/json
      description: Cria um novo pipeline
      parameters:
      - description: Project ID (UUID)
        in: query
        name: project_id
        required: true
        type: string
      - description: Pipeline data
        in: body
        name: pipeline
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreatePipelineRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Pipeline created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create pipeline
      tags:
      - CRM - Pipelines
  /api/v1/pipelines/{id}:
    get:
      description: Obtém detalhes de um pipeline específico com seus status
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Pipeline details with statuses
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid pipeline ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Pipeline not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get pipeline by ID
      tags:
      - CRM - Pipelines
  /api/v1/pipelines/{id}/statuses:
    post:
      consumes:
      - application/json
      description: Cria um novo status em um pipeline
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Status data
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateStatusRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Status created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Pipeline not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create status
      tags:
      - CRM - Pipelines
  /api/v1/pipelines/{pipeline_id}/contacts/{contact_id}/status:
    get:
      description: Obtém o status atual de um contato em um pipeline
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: pipeline_id
        required: true
        type: string
      - description: Contact ID (UUID)
        in: path
        name: contact_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contact status
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Status not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get contact status
      tags:
      - CRM - Pipelines
    put:
      consumes:
      - application/json
      description: Altera o status de um contato em um pipeline
      parameters:
      - description: Pipeline ID (UUID)
        in: path
        name: pipeline_id
        required: true
        type: string
      - description: Contact ID (UUID)
        in: path
        name: contact_id
        required: true
        type: string
      - description: Status change data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.ChangeContactStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Status changed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Pipeline or contact not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Change contact status
      tags:
      - CRM - Pipelines
  /api/v1/projects:
    get:
      description: Lista todos os projetos do usuário autenticado
      parameters:
      - description: Filter by tenant ID
        in: query
        name: tenant_id
        type: string
      - description: Filter by active status
        in: query
        name: active
        type: boolean
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of projects
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Not authenticated
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List projects
      tags:
      - CRM - Projects
    post:
      consumes:
      - application/json
      description: Cria um novo projeto
      parameters:
      - description: Project data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Project created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create project
      tags:
      - CRM - Projects
  /api/v1/projects/{id}:
    delete:
      description: Remove um projeto (soft delete)
      parameters:
      - description: Project ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Project deleted successfully
        "400":
          description: Invalid project ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Project not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete project
      tags:
      - CRM - Projects
    get:
      description: Obtém detalhes de um projeto específico
      parameters:
      - description: Project ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Project details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid project ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Project not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get project by ID
      tags:
      - CRM - Projects
    put:
      consumes:
      - application/json
      description: Atualiza um projeto existente
      parameters:
      - description: Project ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Project update data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Project updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Project not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update project
      tags:
      - CRM - Projects
  /api/v1/queues:
    get:
      description: Lista todas as filas do RabbitMQ com número de mensagens e consumers
      produces:
      - application/json
      responses:
        "200":
          description: Queue statistics
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List RabbitMQ queues
      tags:
      - queues
  /api/v1/sessions:
    get:
      description: Lista todas as sessões. Quando usado no endpoint global /sessions,
        requer contact_id ou channel_id
      parameters:
      - description: Filter by contact ID (UUID) - required for global endpoint
        in: query
        name: contact_id
        type: string
      - description: Filter by channel ID (UUID) - required for global endpoint
        in: query
        name: channel_id
        type: string
      - description: Filter by status (active, ended)
        in: query
        name: status
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of sessions
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List sessions
      tags:
      - CRM - Sessions
  /api/v1/sessions/{id}:
    get:
      description: Obtém detalhes de uma sessão específica
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid session ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Session not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get session by ID
      tags:
      - CRM - Sessions
  /api/v1/sessions/{id}/close:
    post:
      consumes:
      - application/json
      description: Encerra uma sessão manualmente. Apenas agentes podem encerrar sessões.
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Close session request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CloseSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Session closed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Session not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Close session
      tags:
      - CRM - Sessions
  /api/v1/sessions/{session_id}/domain-events:
    get:
      description: Lista todos os eventos de domínio disparados para uma sessão
      parameters:
      - description: Session ID
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List domain events by session
      tags:
      - domain-events
  /api/v1/sessions/{session_id}/messages:
    get:
      description: Get all messages from a specific session
      parameters:
      - description: Session ID (UUID)
        in: path
        name: session_id
        required: true
        type: string
      - default: 100
        description: Limit results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of messages
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Invalid session ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get messages by session
      tags:
      - CRM - Messages
  /api/v1/sessions/stats:
    get:
      description: Obtém estatísticas das sessões por tenant
      parameters:
      - description: Tenant ID
        in: query
        name: tenant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session statistics
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Missing tenant ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get session statistics
      tags:
      - CRM - Sessions
  /api/v1/test/waha-connection:
    post:
      consumes:
      - application/json
      description: Testa a conexão com a API WAHA usando token e base URL
      parameters:
      - description: WAHA connection data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.TestWAHARequest'
      produces:
      - application/json
      responses:
        "200":
          description: Connection test result
          schema:
            additionalProperties: true
            type: object
      summary: Test WAHA connection
      tags:
      - test
  /api/v1/test/waha-qr:
    post:
      consumes:
      - application/json
      description: Simula recebimento de um QR code da WAHA para teste
      parameters:
      - description: QR code test data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.TestQRCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: QR code test result
          schema:
            additionalProperties: true
            type: object
      summary: Test WAHA QR code
      tags:
      - test
  /api/v1/trackings:
    post:
      consumes:
      - application/json
      description: Cria um novo registro de tracking para rastrear origem de contato
        (anúncios, campanhas, etc)
      parameters:
      - description: Dados do tracking
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateTrackingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_tracking.TrackingDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - BearerAuth: []
      summary: Cria um novo tracking de conversão
      tags:
      - CRM - Tracking
  /api/v1/trackings/{id}:
    get:
      description: Retorna um tracking específico por ID
      parameters:
      - description: ID do tracking
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_tracking.TrackingDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      security:
      - BearerAuth: []
      summary: Busca tracking por ID
      tags:
      - CRM - Tracking
  /api/v1/trackings/decode:
    post:
      consumes:
      - application/json
      description: Extrai código invisível ternário de mensagem para identificar tracking
      parameters:
      - description: Mensagem para decode
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_tracking.DecodeTrackingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_tracking.DecodeTrackingResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
      security:
      - BearerAuth: []
      summary: Decodifica mensagem WhatsApp para extrair tracking ID
      tags:
      - CRM - Tracking
  /api/v1/trackings/encode:
    post:
      consumes:
      - application/json
      description: Insere código invisível ternário em mensagem para rastreamento
      parameters:
      - description: Dados para encode
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_ventros_crm_internal_application_tracking.EncodeTrackingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ventros_crm_internal_application_tracking.EncodeTrackingResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - BearerAuth: []
      summary: Codifica tracking ID em mensagem WhatsApp
      tags:
      - CRM - Tracking
  /api/v1/trackings/enums:
    get:
      description: Retorna todos os valores válidos de enums para construir trackings
        (plataformas, mediums, táticas, formatos, etc)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.TrackingEnumsResponse'
      security:
      - BearerAuth: []
      summary: Lista todos os enums disponíveis para tracking
      tags:
      - CRM - Tracking
  /api/v1/webhook-subscriptions:
    get:
      description: Lista todas as inscrições de webhooks
      parameters:
      - description: Filter by active status
        in: query
        name: active
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of webhooks
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List webhook subscriptions
      tags:
      - webhooks
    post:
      consumes:
      - application/json
      description: Cria uma nova inscrição de webhook para receber eventos do WAHA
      parameters:
      - description: Webhook subscription data
        in: body
        name: webhook
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.CreateWebhookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Webhook created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create webhook subscription
      tags:
      - webhooks
  /api/v1/webhook-subscriptions/{id}:
    delete:
      description: Remove uma inscrição de webhook
      parameters:
      - description: Webhook ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Webhook deleted successfully
        "404":
          description: Webhook not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete webhook subscription
      tags:
      - webhooks
    get:
      description: Obtém detalhes de uma inscrição de webhook
      parameters:
      - description: Webhook ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Webhook details
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Webhook not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get webhook subscription
      tags:
      - webhooks
    put:
      consumes:
      - application/json
      description: Atualiza uma inscrição de webhook
      parameters:
      - description: Webhook ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Webhook update data
        in: body
        name: webhook
        required: true
        schema:
          $ref: '#/definitions/infrastructure_http_handlers.UpdateWebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Webhook updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Webhook not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update webhook subscription
      tags:
      - webhooks
  /api/v1/webhook-subscriptions/available-events:
    get:
      description: Lista todos os eventos WAHA disponíveis para inscrição
      produces:
      - application/json
      responses:
        "200":
          description: Available events
          schema:
            additionalProperties: true
            type: object
      summary: Get available WAHA events
      tags:
      - webhooks
  /api/v1/webhooks/{webhook_id}:
    post:
      consumes:
      - application/json
      description: Recebe eventos de webhook do WAHA usando ID único do webhook (padrão
        indústria)
      parameters:
      - description: Webhook ID único
        in: path
        name: webhook_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Event queued
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Webhook not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Receive WAHA webhook
      tags:
      - webhooks
  /api/v1/webhooks/info:
    get:
      description: Retorna informações sobre o endpoint de webhook (padrão indústria)
      produces:
      - application/json
      responses:
        "200":
          description: Webhook info
          schema:
            additionalProperties: true
            type: object
      summary: Get webhook info
      tags:
      - webhooks
  /api/v1/webhooks/stripe:
    post:
      consumes:
      - application/json
      description: Recebe e processa eventos de webhook do Stripe
      produces:
      - application/json
      responses:
        "200":
          description: Event processed
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Receive Stripe webhook
      tags:
      - webhooks
  /api/v1/webhooks/stripe/info:
    get:
      description: Retorna informações sobre o endpoint de webhook do Stripe
      produces:
      - application/json
      responses:
        "200":
          description: Webhook info
          schema:
            additionalProperties: true
            type: object
      summary: Get Stripe webhook info
      tags:
      - webhooks
  /api/v1/ws/messages:
    get:
      description: Establishes WebSocket connection for bi-directional real-time messaging
      parameters:
      - description: Authentication token (alternative to Bearer header)
        in: query
        name: token
        type: string
      responses:
        "101":
          description: Switching Protocols - WebSocket connection established
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - origin not allowed
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: WebSocket connection for real-time messages
      tags:
      - websocket
  /api/v1/ws/stats:
    get:
      description: Returns current WebSocket connection statistics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: WebSocket statistics
      tags:
      - websocket
  /health:
    get:
      consumes:
      - application/json
      description: Check if the API is running (basic liveness check)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.HealthResponse'
      summary: Health check
      tags:
      - health
  /health/database:
    get:
      consumes:
      - application/json
      description: Check database connectivity and connection pool status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
      summary: Database health check
      tags:
      - health
  /health/migrations:
    get:
      consumes:
      - application/json
      description: Check database migration status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
      summary: Database migrations health check
      tags:
      - health
  /health/rabbitmq:
    get:
      consumes:
      - application/json
      description: Check RabbitMQ connectivity
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
      summary: RabbitMQ health check
      tags:
      - health
  /health/redis:
    get:
      consumes:
      - application/json
      description: Check Redis connectivity and status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
      summary: Redis health check
      tags:
      - health
  /health/temporal:
    get:
      consumes:
      - application/json
      description: Check Temporal workflow engine connectivity
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/github_com_ventros_crm_infrastructure_health.CheckResult'
      summary: Temporal health check
      tags:
      - health
  /live:
    get:
      consumes:
      - application/json
      description: Check if the API is alive (always returns 200 if service is running)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.HealthResponse'
      summary: Liveness check
      tags:
      - health
  /ready:
    get:
      consumes:
      - application/json
      description: Check if the API is ready to serve requests (includes all dependency
        checks)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.HealthResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/infrastructure_http_handlers.HealthResponse'
      summary: Readiness check
      tags:
      - health
  /test/cleanup:
    post:
      description: Remove todos os dados de teste criados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Cleanup test environment
      tags:
      - test
  /test/send-waha-message:
    post:
      description: Envia mensagem WAHA automaticamente para o webhook interno
      parameters:
      - description: 'Message type: fb_ads, text, image (default: fb_ads)'
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Send WAHA message automatically
      tags:
      - test
  /test/setup:
    post:
      description: Limpa e cria project, pipeline, channel types e webhook para testes
      parameters:
      - description: URL do webhook externo (opcional)
        in: query
        name: webhook_url
        type: string
      - description: 'Base URL da API (opcional, default: http://localhost:8080)'
        in: query
        name: api_base_url
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Setup test environment
      tags:
      - test
  /test/waha-message:
    post:
      description: Envia mensagem WAHA de teste com dados de tracking do Facebook/Instagram
      parameters:
      - description: 'Message type: fb_ads, text, image (default: fb_ads)'
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Test WAHA message with tracking
      tags:
      - test
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    description: API Key authentication for service-to-service communication
    in: header
    name: X-API-Key
    type: apiKey
  BearerAuth:
    description: 'Bearer token authentication. Format: "Bearer {token}"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
