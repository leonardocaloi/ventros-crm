{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API para gerenciamento de CRM com eventos e workflows",
        "title": "Ventros CRM API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@ventros.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/api/v1/agents": {
            "get": {
                "description": "Lista todos os agentes com filtros opcionais",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "List agents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by tenant ID",
                        "name": "tenant_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by active status",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by department",
                        "name": "department",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of agents",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um novo agente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Create agent",
                "parameters": [
                    {
                        "description": "Agent data",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.CreateAgentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Agent created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/agents/{id}": {
            "get": {
                "description": "Obtém detalhes de um agente específico",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Get agent by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agent details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid agent ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza um agente existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Update agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent update data",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.UpdateAgentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agent updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove um agente (soft delete)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Delete agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Agent deleted successfully"
                    },
                    "400": {
                        "description": "Invalid agent ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/agents/{id}/stats": {
            "get": {
                "description": "Obtém estatísticas de um agente",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Get agent statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agent statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid agent ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/api-key": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gera uma nova API key para o usuário",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Generate API key",
                "parameters": [
                    {
                        "description": "API key request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.GenerateAPIKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API key generated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/info": {
            "get": {
                "description": "Informações sobre autenticação para desenvolvimento",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get auth info",
                "responses": {
                    "200": {
                        "description": "Auth information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Autentica um usuário e retorna API key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtém o perfil do usuário autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Cria um novo usuário no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/contacts": {
            "get": {
                "description": "Lista todos os contatos com filtros opcionais (apenas do usuário autenticado)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "List contacts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "project_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of contacts",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/List"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Contact"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Project not owned by user",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new contact in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Create a new contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "project_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Contact data",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateContactRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Contact created successfully",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/contacts/{id}": {
            "get": {
                "description": "Get detailed information about a specific contact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Get contact by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact details",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "400": {
                        "description": "Invalid contact ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza um contato existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Update contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Contact update data",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.UpdateContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove um contato (soft delete)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Delete contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contact deleted successfully"
                    },
                    "400": {
                        "description": "Invalid contact ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/messages": {
            "get": {
                "description": "Lista mensagens com filtros opcionais",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "List messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by session ID (UUID)",
                        "name": "session_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by contact ID (UUID)",
                        "name": "contact_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by direction (inbound, outbound)",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by message type",
                        "name": "message_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of messages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Cria uma nova mensagem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Create message",
                "parameters": [
                    {
                        "description": "Message data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.CreateMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Message created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/messages/{id}": {
            "get": {
                "description": "Obtém detalhes de uma mensagem específica",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get message by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid message ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza uma mensagem existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Update message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message update data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.UpdateMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove uma mensagem (soft delete)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Delete message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Message deleted successfully"
                    },
                    "400": {
                        "description": "Invalid message ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/pipelines": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Lista todos os pipelines de um projeto (apenas do usuário autenticado)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "List pipelines",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID (UUID)",
                        "name": "project_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by active status",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of pipelines",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Project not owned by user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um novo pipeline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Create pipeline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID (UUID)",
                        "name": "project_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Pipeline data",
                        "name": "pipeline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.CreatePipelineRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Pipeline created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/pipelines/{id}": {
            "get": {
                "description": "Obtém detalhes de um pipeline específico com seus status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Get pipeline by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pipeline ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pipeline details with statuses",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid pipeline ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Pipeline not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/pipelines/{id}/statuses": {
            "post": {
                "description": "Cria um novo status em um pipeline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Create status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pipeline ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status data",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.CreateStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Status created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Pipeline not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/pipelines/{pipeline_id}/contacts/{contact_id}/status": {
            "get": {
                "description": "Obtém o status atual de um contato em um pipeline",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Get contact status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pipeline ID (UUID)",
                        "name": "pipeline_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contact ID (UUID)",
                        "name": "contact_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Status not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Altera o status de um contato em um pipeline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Change contact status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pipeline ID (UUID)",
                        "name": "pipeline_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contact ID (UUID)",
                        "name": "contact_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status change data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.ChangeContactStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status changed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Pipeline or contact not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/projects": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Lista todos os projetos do usuário autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "List projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by tenant ID",
                        "name": "tenant_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by active status",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um novo projeto",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Create project",
                "parameters": [
                    {
                        "description": "Project data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.CreateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}": {
            "get": {
                "description": "Obtém detalhes de um projeto específico",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get project by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza um projeto existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Update project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project update data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.UpdateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove um projeto (soft delete)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Delete project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Project deleted successfully"
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/queues": {
            "get": {
                "description": "Lista todas as filas do RabbitMQ com número de mensagens e consumers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "List RabbitMQ queues",
                "responses": {
                    "200": {
                        "description": "Queue statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/sessions": {
            "get": {
                "description": "Lista todas as sessões com filtros opcionais",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "List sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by tenant ID",
                        "name": "tenant_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by contact ID (UUID)",
                        "name": "contact_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status (active, ended)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sessions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/stats": {
            "get": {
                "description": "Obtém estatísticas das sessões por tenant",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Get session statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenant_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Missing tenant ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/{id}": {
            "get": {
                "description": "Obtém detalhes de uma sessão específica",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Get session by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid session ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/{session_id}/messages": {
            "get": {
                "description": "Obtém todas as mensagens de uma sessão específica",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get messages by session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID (UUID)",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of messages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid session ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/webhook-subscriptions": {
            "get": {
                "description": "Lista todas as inscrições de webhooks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "List webhook subscriptions",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter by active status",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of webhooks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Cria uma nova inscrição de webhook para receber eventos do WAHA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Create webhook subscription",
                "parameters": [
                    {
                        "description": "Webhook subscription data",
                        "name": "webhook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.CreateWebhookRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Webhook created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/webhook-subscriptions/available-events": {
            "get": {
                "description": "Lista todos os eventos WAHA disponíveis para inscrição",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Get available WAHA events",
                "responses": {
                    "200": {
                        "description": "Available events",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/webhook-subscriptions/{id}": {
            "get": {
                "description": "Obtém detalhes de uma inscrição de webhook",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Get webhook subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Webhook ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Webhook not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza uma inscrição de webhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Update webhook subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Webhook ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Webhook update data",
                        "name": "webhook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.UpdateWebhookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Webhook not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove uma inscrição de webhook",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Delete webhook subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Webhook ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Webhook deleted successfully"
                    },
                    "404": {
                        "description": "Webhook not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the API is running (basic liveness check)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.HealthResponse"
                        }
                    }
                }
            }
        },
        "/health/database": {
            "get": {
                "description": "Check database connectivity and connection pool status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Database health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                        }
                    }
                }
            }
        },
        "/health/migrations": {
            "get": {
                "description": "Check database migration status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Database migrations health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                        }
                    }
                }
            }
        },
        "/health/rabbitmq": {
            "get": {
                "description": "Check RabbitMQ connectivity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "RabbitMQ health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                        }
                    }
                }
            }
        },
        "/health/redis": {
            "get": {
                "description": "Check Redis connectivity and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Redis health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                        }
                    }
                }
            }
        },
        "/health/temporal": {
            "get": {
                "description": "Check Temporal workflow engine connectivity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Temporal health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                        }
                    }
                }
            }
        },
        "/live": {
            "get": {
                "description": "Check if the API is alive (always returns 200 if service is running)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Liveness check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.HealthResponse"
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Check if the API is ready to serve requests (includes all dependency checks)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/infrastructure_http_handlers.HealthResponse"
                        }
                    }
                }
            }
        },
        "/test/cleanup": {
            "post": {
                "description": "Remove todos os dados de teste criados",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test"
                ],
                "summary": "Cleanup test environment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/test/send-waha-message": {
            "post": {
                "description": "Envia mensagem WAHA automaticamente para o webhook interno",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test"
                ],
                "summary": "Send WAHA message automatically",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message type: fb_ads, text, image (default: fb_ads)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/test/setup": {
            "post": {
                "description": "Limpa e cria project, pipeline, channel types e webhook para testes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test"
                ],
                "summary": "Setup test environment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/test/waha-message": {
            "post": {
                "description": "Envia mensagem WAHA de teste com dados de tracking do Facebook/Instagram",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test"
                ],
                "summary": "Test WAHA message with tracking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message type: fb_ads, text, image (default: fb_ads)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/webhooks/waha/events": {
            "post": {
                "description": "Endpoint único para todos os eventos WAHA (message, ack, session, etc)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Receive WAHA webhook",
                "parameters": [
                    {
                        "description": "WAHA Event",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMessageEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event queued successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/webhooks/waha/health": {
            "get": {
                "description": "Verifica se o endpoint de webhook está funcionando",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Webhook health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/webhooks/waha/status": {
            "post": {
                "description": "Endpoint para receber confirmações de entrega da WAHA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Receive WAHA message status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Contact": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "joao@example.com"
                },
                "external_id": {
                    "type": "string",
                    "example": "ext-123"
                },
                "first_interaction_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "language": {
                    "type": "string",
                    "example": "pt-BR"
                },
                "last_interaction_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "João Silva"
                },
                "phone": {
                    "type": "string",
                    "example": "5511999999999"
                },
                "project_id": {
                    "type": "string",
                    "example": "11111111-1111-1111-1111-111111111111"
                },
                "source_channel": {
                    "type": "string",
                    "example": "whatsapp"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "vip",
                        "lead"
                    ]
                },
                "tenant_id": {
                    "type": "string",
                    "example": "default"
                },
                "timezone": {
                    "type": "string",
                    "example": "America/Sao_Paulo"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "CreateContactRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "joao@example.com"
                },
                "external_id": {
                    "type": "string",
                    "example": "ext-123"
                },
                "language": {
                    "type": "string",
                    "example": "pt-BR"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string",
                    "example": "João Silva"
                },
                "phone": {
                    "type": "string",
                    "example": "5511999999999"
                },
                "source_channel": {
                    "type": "string",
                    "example": "whatsapp"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "vip",
                        "lead"
                    ]
                },
                "timezone": {
                    "type": "string",
                    "example": "America/Sao_Paulo"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "error": {
                    "type": "string",
                    "example": "Validation failed"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid email format"
                }
            }
        },
        "List": {
            "type": "object",
            "properties": {
                "data": {},
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 20
                },
                "total": {
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAContextInfo": {
            "type": "object",
            "properties": {
                "conversionData": {
                    "type": "string"
                },
                "conversionSource": {
                    "description": "Tracking de conversão (ads, etc)",
                    "type": "string"
                },
                "entryPointConversionApp": {
                    "type": "string"
                },
                "entryPointConversionExternalMedium": {
                    "type": "string"
                },
                "entryPointConversionExternalSource": {
                    "type": "string"
                },
                "entryPointConversionSource": {
                    "type": "string"
                },
                "externalAdReply": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAExternalAdReply"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAData": {
            "type": "object",
            "properties": {
                "Info": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAInfo"
                },
                "Message": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMessage"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAEnvironment": {
            "type": "object",
            "properties": {
                "browser": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "tier": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAExtendedText": {
            "type": "object",
            "properties": {
                "contextInfo": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAContextInfo"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAExternalAdReply": {
            "type": "object",
            "properties": {
                "ctwaClid": {
                    "description": "Click ID do Click-to-WhatsApp Ad",
                    "type": "string"
                },
                "sourceApp": {
                    "type": "string"
                },
                "sourceID": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "sourceURL": {
                    "type": "string"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAInfo": {
            "type": "object",
            "properties": {
                "Chat": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "IsFromMe": {
                    "type": "boolean"
                },
                "IsGroup": {
                    "type": "boolean"
                },
                "MediaType": {
                    "description": "\"image\", \"video\", \"audio\", etc",
                    "type": "string"
                },
                "PushName": {
                    "type": "string"
                },
                "Sender": {
                    "type": "string"
                },
                "SenderAlt": {
                    "description": "LID alternativo",
                    "type": "string"
                },
                "Type": {
                    "description": "\"text\", \"media\"",
                    "type": "string"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMe": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jid": {
                    "type": "string"
                },
                "lid": {
                    "type": "string"
                },
                "pushName": {
                    "type": "string"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMedia": {
            "type": "object",
            "properties": {
                "mimetype": {
                    "type": "string"
                },
                "s3": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAS3"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMediaMessage": {
            "type": "object",
            "properties": {
                "URL": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "mimetype": {
                    "type": "string"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMessage": {
            "type": "object",
            "properties": {
                "audioMessage": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMediaMessage"
                },
                "conversation": {
                    "description": "Diferentes tipos de mensagens",
                    "type": "string"
                },
                "documentMessage": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMediaMessage"
                },
                "extendedTextMessage": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAExtendedText"
                },
                "imageMessage": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMediaMessage"
                },
                "stickerMessage": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMediaMessage"
                },
                "videoMessage": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMediaMessage"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMessageEvent": {
            "type": "object",
            "properties": {
                "environment": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAEnvironment"
                },
                "event": {
                    "description": "\"message\", \"message.any\", \"message.ack\", etc",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "me": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMe"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "payload": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAPayload"
                },
                "session": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAPayload": {
            "type": "object",
            "properties": {
                "_data": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAData"
                },
                "body": {
                    "description": "Texto da mensagem",
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "fromMe": {
                    "type": "boolean"
                },
                "hasMedia": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "media": {
                    "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAMedia"
                },
                "participant": {
                    "description": "Para grupos",
                    "type": "string"
                },
                "replyTo": {
                    "type": "string"
                },
                "source": {
                    "description": "\"app\", \"web\", etc",
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_channels_waha.WAHAS3": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_health.CheckResult": {
            "type": "object",
            "properties": {
                "duration_ms": {
                    "type": "integer",
                    "example": 15
                },
                "message": {
                    "type": "string",
                    "example": "database is operational"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.Status"
                        }
                    ],
                    "example": "healthy"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                }
            }
        },
        "github_com_caloi_ventros-crm_infrastructure_health.Status": {
            "type": "string",
            "enum": [
                "healthy",
                "degraded",
                "unhealthy"
            ],
            "x-enum-varnames": [
                "StatusHealthy",
                "StatusDegraded",
                "StatusUnhealthy"
            ]
        },
        "github_com_caloi_ventros-crm_internal_domain_pipeline.StatusType": {
            "type": "string",
            "enum": [
                "open",
                "active",
                "closed"
            ],
            "x-enum-comments": {
                "StatusTypeActive": "Status ativo/em progresso",
                "StatusTypeClosed": "Status fechado/finalizado",
                "StatusTypeOpen": "Status inicial/aberto"
            },
            "x-enum-descriptions": [
                "Status inicial/aberto",
                "Status ativo/em progresso",
                "Status fechado/finalizado"
            ],
            "x-enum-varnames": [
                "StatusTypeOpen",
                "StatusTypeActive",
                "StatusTypeClosed"
            ]
        },
        "infrastructure_http_handlers.ChangeContactStatusRequest": {
            "type": "object",
            "required": [
                "status_id"
            ],
            "properties": {
                "notes": {
                    "type": "string",
                    "example": "Cliente interessado no produto X"
                },
                "reason": {
                    "type": "string",
                    "example": "Contato respondeu"
                },
                "status_id": {
                    "type": "string"
                }
            }
        },
        "infrastructure_http_handlers.CreateAgentRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "tenant_id"
            ],
            "properties": {
                "department": {
                    "type": "string",
                    "example": "vendas"
                },
                "email": {
                    "type": "string",
                    "example": "joao@empresa.com"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "pt",
                        "en"
                    ]
                },
                "max_sessions": {
                    "type": "integer",
                    "example": 5
                },
                "name": {
                    "type": "string",
                    "example": "João Silva"
                },
                "phone": {
                    "type": "string",
                    "example": "+5511999999999"
                },
                "role": {
                    "type": "string",
                    "example": "agent"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "vendas",
                        "suporte"
                    ]
                },
                "tenant_id": {
                    "type": "string",
                    "example": "tenant_123"
                }
            }
        },
        "infrastructure_http_handlers.CreateMessageRequest": {
            "type": "object",
            "required": [
                "channel_type_id",
                "contact_id",
                "content",
                "session_id"
            ],
            "properties": {
                "channel_type_id": {
                    "type": "string"
                },
                "contact_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string",
                    "example": "Olá, como posso ajudar?"
                },
                "direction": {
                    "type": "string",
                    "example": "inbound"
                },
                "external_id": {
                    "type": "string",
                    "example": "msg_123"
                },
                "media_type": {
                    "type": "string"
                },
                "media_url": {
                    "type": "string"
                },
                "message_type": {
                    "type": "string",
                    "example": "text"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "reply_to_id": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "infrastructure_http_handlers.CreatePipelineRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#3B82F6"
                },
                "description": {
                    "type": "string",
                    "example": "Pipeline de vendas principal"
                },
                "name": {
                    "type": "string",
                    "example": "Vendas"
                },
                "position": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "infrastructure_http_handlers.CreateProjectRequest": {
            "type": "object",
            "required": [
                "name",
                "tenant_id"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Projeto principal de vendas"
                },
                "name": {
                    "type": "string",
                    "example": "Projeto Vendas"
                },
                "tenant_id": {
                    "type": "string",
                    "example": "tenant_123"
                }
            }
        },
        "infrastructure_http_handlers.CreateStatusRequest": {
            "type": "object",
            "required": [
                "name",
                "status_type"
            ],
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#10B981"
                },
                "description": {
                    "type": "string",
                    "example": "Lead recém chegado"
                },
                "name": {
                    "type": "string",
                    "example": "Novo Lead"
                },
                "position": {
                    "type": "integer",
                    "example": 0
                },
                "status_type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_caloi_ventros-crm_internal_domain_pipeline.StatusType"
                        }
                    ],
                    "example": "open"
                }
            }
        },
        "infrastructure_http_handlers.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "joao@empresa.com"
                },
                "name": {
                    "type": "string",
                    "example": "João Silva"
                },
                "password": {
                    "type": "string",
                    "example": "senha123"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "infrastructure_http_handlers.CreateWebhookRequest": {
            "type": "object",
            "required": [
                "events",
                "name",
                "url"
            ],
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "message",
                        "ack",
                        "call.received"
                    ]
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "Authorization": "Bearer token123"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "N8N Webhook"
                },
                "retry_count": {
                    "type": "integer",
                    "example": 3
                },
                "secret": {
                    "type": "string",
                    "example": "my-secret-key"
                },
                "timeout_seconds": {
                    "type": "integer",
                    "example": 30
                },
                "url": {
                    "type": "string",
                    "example": "https://n8n.example.com/webhook/waha-events"
                }
            }
        },
        "infrastructure_http_handlers.GenerateAPIKeyRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Minha API Key"
                }
            }
        },
        "infrastructure_http_handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/github_com_caloi_ventros-crm_infrastructure_health.CheckResult"
                    }
                },
                "service": {
                    "type": "string",
                    "example": "ventros-crm"
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "infrastructure_http_handlers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "joao@empresa.com"
                },
                "password": {
                    "type": "string",
                    "example": "senha123"
                }
            }
        },
        "infrastructure_http_handlers.UpdateAgentRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "max_sessions": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "infrastructure_http_handlers.UpdateContactRequest": {
            "type": "object",
            "properties": {
                "custom_fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "source_channel": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "infrastructure_http_handlers.UpdateMessageRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "delivered_at": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "read_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "infrastructure_http_handlers.UpdateProjectRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "infrastructure_http_handlers.UpdateWebhookRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "retry_count": {
                    "type": "integer"
                },
                "secret": {
                    "type": "string"
                },
                "timeout_seconds": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}