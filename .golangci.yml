# golangci-lint configuration
# https://golangci-lint.run/usage/configuration/

run:
  # Timeout for analysis, e.g. 30s, 1m.
  timeout: 5m
  
  # Include test files
  tests: true
  
  # Which dirs to skip
  skip-dirs:
    - vendor
    - bin
    - docs
    - deployments
    - scripts
    - guides
  
  # Which files to skip
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"

# Output configuration
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate
  format: colored-line-number
  
  # Print lines of code with issue
  print-issued-lines: true
  
  # Print linter name in the end of issue text
  print-linter-name: true

# Linters settings
linters-settings:
  # Errcheck
  errcheck:
    # Check type assertions
    check-type-assertions: true
    # Check blank assignments
    check-blank: true
  
  # Govet
  govet:
    # Enable all analyzers
    enable-all: true
  
  # Gofmt
  gofmt:
    # Simplify code
    simplify: true
  
  # Goimports
  goimports:
    # Put imports beginning with prefix after 3rd-party packages
    local-prefixes: github.com/caloi/ventros-crm
  
  # Revive
  revive:
    # Minimal confidence for issues
    confidence: 0.8
  
  # Gosimple
  gosimple:
    # Enable all checks
    checks: ["all"]
  
  # Staticcheck
  staticcheck:
    # Enable all checks
    checks: ["all"]
  
  # Unused
  unused:
    # Check all exported identifiers
    check-exported: true
  
  # Goconst
  goconst:
    # Minimal length of string constant
    min-len: 3
    # Minimum occurrences to report
    min-occurrences: 3
  
  # Misspell
  misspell:
    locale: US
  
  # Lll (line length)
  lll:
    line-length: 120
    tab-width: 4
  
  # Cyclop (cyclomatic complexity)
  cyclop:
    max-complexity: 15
    skip-tests: true
  
  # Dupl (code duplication)
  dupl:
    threshold: 100

# Enabled linters
linters:
  disable-all: true
  enable:
    # Default linters
    - errcheck      # Checking for unchecked errors
    - gosimple      # Simplify code
    - govet         # Vet examines Go source code
    - ineffassign   # Detects ineffectual assignments
    - staticcheck   # Go static analysis
    - unused        # Checks for unused code
    
    # Additional recommended linters
    - gofmt         # Checks code is formatted
    - goimports     # Check import statements are formatted
    - revive        # Golint replacement
    - misspell      # Finds commonly misspelled words
    - goconst       # Finds repeated strings that could be constants
    - unconvert     # Remove unnecessary type conversions
    - dupl          # Code clone detection
    - bodyclose     # Checks HTTP response body is closed
    - noctx         # Finds HTTP requests without context.Context
    - gosec         # Security issues
    - prealloc      # Finds slice declarations that could be preallocated
    - exportloopref # Checks for pointers to loop variables
    - goprintffuncname # Checks printf-like functions are named correctly
    
    # Style linters (optional, can be disabled)
    - stylecheck    # Replacement for golint
    - whitespace    # Detects leading/trailing whitespace
    
    # Optional strict linters (comment out if too strict)
    # - cyclop        # Cyclomatic complexity
    # - gocognit      # Cognitive complexity
    # - funlen        # Function length
    # - lll           # Line length

# Issues configuration
issues:
  # Maximum issues count per one linter
  max-issues-per-linter: 0
  
  # Maximum count of issues with the same text
  max-same-issues: 0
  
  # Show only new issues
  new: false
  
  # Exclude some linters from running on tests files
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - dupl
        - gosec
        - goconst
    
    # Exclude magic numbers in tests
    - path: _test\.go
      text: "mnd: Magic number"
    
    # Exclude known issues
    - text: "G404: Use of weak random number generator"
      linters:
        - gosec
    
    # Exclude TODO comments
    - text: "Line contains TODO/BUG/FIXME"
      linters:
        - godox
    
    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"
    
    # Exclude shadow declaration warnings in short variable declarations
    - linters:
        - govet
      text: "shadow: declaration of"
  
  # Independently of option `exclude` we use default exclude patterns
  exclude-use-default: true

# Severity rules
severity:
  # Default value is empty string.
  default-severity: error
  
  # Rules for severity
  rules:
    - linters:
        - dupl
      severity: warning
    - linters:
        - goconst
      severity: warning
