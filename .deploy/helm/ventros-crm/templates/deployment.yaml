{{- if gt (int .Values.replicaCount) 0 }}
{{- include "ventros-crm.validate.all" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ventros-crm.fullname" . }}
  labels:
    {{- include "ventros-crm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.deploymentStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds | default 600 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 3 }}
  selector:
    matchLabels:
      {{- include "ventros-crm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.configMap.enabled }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ventros-crm.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ventros-crm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if or .Values.postgresOperator.enabled .Values.externalPostgresql.host }}
        {{- if .Values.initContainers.waitForPostgres.enabled }}
        - name: wait-for-postgres
          image: {{ .Values.initContainers.waitForPostgres.image }}
          command: 
            - sh
            - -c
            - |
              echo "Waiting for PostgreSQL..."
              until nc -z -w1 {{ include "ventros-crm.postgresql.host" . }} {{ include "ventros-crm.postgresql.port" . }} 2>/dev/null; do
                echo "PostgreSQL is unavailable - sleeping"
                sleep 2
              done
              echo "PostgreSQL is up!"
          resources:
            {{- toYaml .Values.initContainers.waitForPostgres.resources | nindent 12 }}
        {{- end }}
        {{- end }}
        {{- if or .Values.redis.enabled .Values.externalRedis.host }}
        {{- if .Values.initContainers.waitForRedis.enabled }}
        - name: wait-for-redis
          image: {{ .Values.initContainers.waitForRedis.image }}
          command:
            - sh
            - -c
            - |
              echo "Waiting for Redis..."
              until nc -z -w1 {{ include "ventros-crm.redis.host" . }} {{ include "ventros-crm.redis.port" . }} 2>/dev/null; do
                echo "Redis is unavailable - sleeping"
                sleep 2
              done
              echo "Redis is up!"
          resources:
            {{- toYaml .Values.initContainers.waitForRedis.resources | nindent 12 }}
        {{- end }}
        {{- end }}
        {{- if or .Values.rabbitmqOperator.enabled .Values.rabbitmq.enabled .Values.externalRabbitmq.host }}
        {{- if .Values.initContainers.waitForRabbitmq.enabled }}
        - name: wait-for-rabbitmq
          image: {{ .Values.initContainers.waitForRabbitmq.image }}
          command:
            - sh
            - -c
            - |
              echo "Waiting for RabbitMQ..."
              until nc -z -w1 {{ include "ventros-crm.rabbitmq.host" . }} {{ include "ventros-crm.rabbitmq.port" . }} 2>/dev/null; do
                echo "RabbitMQ is unavailable - sleeping"
                sleep 2
              done
              echo "RabbitMQ is up!"
          resources:
            {{- toYaml .Values.initContainers.waitForRabbitmq.resources | nindent 12 }}
        {{- end }}
        {{- end }}
        {{- if .Values.temporal.enabled }}
        {{- if .Values.initContainers.waitForTemporal.enabled }}
        - name: wait-for-temporal
          image: {{ .Values.initContainers.waitForTemporal.image }}
          command:
            - sh
            - -c
            - |
              echo "Waiting for Temporal..."
              until nc -z -w1 {{ include "ventros-crm.temporal.host" . }} {{ include "ventros-crm.temporal.port" . }} 2>/dev/null; do
                echo "Temporal is unavailable - sleeping"
                sleep 2
              done
              echo "Temporal is up!"
          resources:
            {{- toYaml .Values.initContainers.waitForTemporal.resources | nindent 12 }}
        {{- end }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "ventros-crm.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.configMap.enabled }}
          envFrom:
            - configMapRef:
                name: {{ include "ventros-crm.configMapName" . }}
          {{- end }}
          env:
            # Secrets - PostgreSQL
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ventros-crm.postgresql.secretName" . }}
                  key: {{ include "ventros-crm.postgresql.secretKey" . }}
            
            # Secrets - Redis (optional)
            {{- $redisSecretName := include "ventros-crm.redis.secretName" . }}
            {{- if $redisSecretName }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $redisSecretName }}
                  key: {{ include "ventros-crm.redis.secretKey" . }}
            {{- else }}
            - name: REDIS_PASSWORD
              value: ""
            {{- end }}
            
            # Secrets - RabbitMQ Password (host, port, user vÃªm do ConfigMap)
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ventros-crm.rabbitmq.secretName" . }}
                  key: {{ include "ventros-crm.rabbitmq.secretKey" . }}
            
            # Secrets - WAHA
            - name: WAHA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.secrets.existingSecret }}{{ .Values.secrets.existingSecret }}{{ else }}{{ include "ventros-crm.fullname" . }}-secrets{{ end }}
                  key: {{ .Values.secrets.wahaApiKeyKey }}
            
            # Secrets - Admin
            - name: ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.secrets.existingSecret }}{{ .Values.secrets.existingSecret }}{{ else }}{{ include "ventros-crm.fullname" . }}-secrets{{ end }}
                  key: admin-email
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.secrets.existingSecret }}{{ .Values.secrets.existingSecret }}{{ else }}{{ include "ventros-crm.fullname" . }}-secrets{{ end }}
                  key: {{ .Values.secrets.adminPasswordKey }}
            - name: ADMIN_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.secrets.existingSecret }}{{ .Values.secrets.existingSecret }}{{ else }}{{ include "ventros-crm.fullname" . }}-secrets{{ end }}
                  key: admin-name
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- if .Values.configMap.enabled }}
            - name: config
              mountPath: /app/config
              readOnly: true
            {{- end }}
      volumes:
        {{- if .Values.volumes.tmp.enabled }}
        - name: tmp
          emptyDir: {}
        {{- end }}
        {{- if .Values.volumes.cache.enabled }}
        - name: cache
          emptyDir: {}
        {{- end }}
        {{- if .Values.configMap.enabled }}
        - name: config
          configMap:
            name: {{ include "ventros-crm.configMapName" . }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
